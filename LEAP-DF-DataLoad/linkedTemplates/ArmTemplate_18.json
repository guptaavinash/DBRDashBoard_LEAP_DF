{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		},
		"SQLServerNCSAstix_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLServerNCSAstix'"
		},
		"Swingdbconnection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Swingdbconnection'"
		},
		"DFLeapTempStorageLink_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://dfdatafoundation.blob.core.windows.net/"
		},
		"DFLeapTempStorageLink_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "515445df-f272-4c96-aa97-d670cbdeab20"
		},
		"DFLeapTempStorageLink_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "7ec6607e-638a-46bf-9ff0-ea38bacb5ea9"
		},
		"TestTrigger_properties_Testpipeline1_parameters_DataProcessDate": {
			"type": "string",
			"defaultValue": "@{convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy')}"
		},
		"Trigger_DW_Scale_properties_DW_Scale_parameters_Scaleval": {
			"type": "string",
			"defaultValue": "DW400c"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/tblsnidbrbillsplitDupsellout')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFoundationDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DF_DBConnection/LEAP Tables"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "BranchSubDNodeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RptMOnthYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TrnDate",
						"type": "date"
					},
					{
						"name": "StoreID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "BranchName",
						"type": "varchar"
					},
					{
						"name": "MonthYear",
						"type": "varchar"
					},
					{
						"name": "StoreName",
						"type": "varchar"
					},
					{
						"name": "flgRF",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "SellerType",
						"type": "varchar"
					},
					{
						"name": "DistributorName",
						"type": "varchar"
					},
					{
						"name": "SiteName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblSniDbrBillSplitDupSellout"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tmpDataForrakesh_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dfdatafoundationLink",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FileConnection"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "pngdbrdata"
					},
					"columnDelimiter": "|",
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Fastest",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tmpDataForrakesh_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFoundationDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DF_DBConnection/LEAP Tables"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DBRName",
						"type": "varchar"
					},
					{
						"name": "BranchCode",
						"type": "varchar"
					},
					{
						"name": "BranchName",
						"type": "varchar"
					},
					{
						"name": "TranType",
						"type": "varchar"
					},
					{
						"name": "InvDate",
						"type": "date"
					},
					{
						"name": "storeCode",
						"type": "varchar"
					},
					{
						"name": "ChannelName",
						"type": "varchar"
					},
					{
						"name": "StoreTypeName",
						"type": "varchar"
					},
					{
						"name": "SBF",
						"type": "varchar"
					},
					{
						"name": "SKUCode",
						"type": "varchar"
					},
					{
						"name": "Line_Gross_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Discount_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Taxable_Scheme_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_CGST_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_SGST_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_IGST_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_CESS_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Net_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Tax_on_Discount_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Tax_on_Scheme_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Tax_on_RLP_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Retailing_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Line_Gross_in_SLP_Val",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UPC",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblApolloPinCodeAnalysis_1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tmpRTDXSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TASDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DF_DBConnection/NCS Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BRANCHCODE",
						"type": "varchar"
					},
					{
						"name": "DSECODE",
						"type": "varchar"
					},
					{
						"name": "CUSTCODE",
						"type": "varchar"
					},
					{
						"name": "SRNNO",
						"type": "varchar"
					},
					{
						"name": "INVNO",
						"type": "varchar"
					},
					{
						"name": "SRNDATE",
						"type": "datetime2",
						"scale": 3
					},
					{
						"name": "SKUCCODE",
						"type": "varchar"
					},
					{
						"name": "SKUDCODE",
						"type": "varchar"
					},
					{
						"name": "SKUEANCODE",
						"type": "varchar"
					},
					{
						"name": "BATCHCODE",
						"type": "varchar"
					},
					{
						"name": "QTY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SELECTEDDATE",
						"type": "datetime2",
						"scale": 3
					},
					{
						"name": "TIMESTAMP",
						"type": "datetime2",
						"scale": 3
					},
					{
						"name": "GROSSINVAMT",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "NETINVAMT",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LINEDISC",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "INITDISC",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TAXES",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "UPC",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RETAILING",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "BranchId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FileSetId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "flgProcess",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Filename",
						"type": "varchar"
					},
					{
						"name": "LastModifiedDatetime",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "TimeStampIns",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tmpRTDXSales"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DFLeapTempStorageLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('DFLeapTempStorageLink_properties_typeProperties_serviceEndpoint')]",
					"tenant": "[parameters('DFLeapTempStorageLink_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('DFLeapTempStorageLink_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "PnGAzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "sp-client-secret-Datafactoryconnection"
					},
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLServerNCSAstix')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SQLServerNCSAstix_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AstixSubD",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Swingdbconnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Swingdbconnection_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AstixSubD",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AS_Scale_S4_New')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "AS_Scale_S4_New",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-07-22T16:33:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								12
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Testpipeline1",
							"type": "PipelineReference"
						},
						"parameters": {
							"DataProcessDate": "[parameters('TestTrigger_properties_Testpipeline1_parameters_DataProcessDate')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-12T12:26:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								28
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_AS_Pause')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "AS_Pause",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T21:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_AS_Resume')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "AS_Resume",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-06T08:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_AS_ResumeScale_S4')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "AS_ResumeandScale_S4",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-07-09T12:26:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								12
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_DW_Pause')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DW_Pause",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-10-13T17:26:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_DW_Resume')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DW_Resume",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-06T03:45:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_DW_Scale')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DW_Scale",
							"type": "PipelineReference"
						},
						"parameters": {
							"Scaleval": "[parameters('Trigger_DW_Scale_properties_DW_Scale_parameters_Scaleval')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-06T03:50:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_PowerBI_Pause')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PowerBI_Pause",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-07-09T13:46:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_PowerBI_Resume')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PowerBI_Resume",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-07-09T13:47:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								10
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AR Data Transfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spTruncateARDataTables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTruncateARDataTables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy tblARData_Current",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spTruncateARDataTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BranchSubdNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchSubdNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchSubdNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchSubdNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Storeid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Storeid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DSENodeid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DSENodeid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DSENodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DSENodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InvNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "InvNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InvDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "InvDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "InvID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InvID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "aging_days",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "aging_days",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "net_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "net_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "paid_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "paid_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "balance_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "balance_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "FileSetId",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "TimeStampIns",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TimeStampIns",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ArDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ArDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ChannelId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ChannelId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubChannelId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubChannelId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblARData_Current",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblLeapARData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spCreateARTableIndex",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy tblARData_Current",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCreateARTableIndex]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DF-To-TAS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AS_CubeProcess_Pcode_Sync_Fact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AS_CubeProcess_Pcode_ActivityAPI",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SpGetCubeDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"httpRequestTimeout": "00:05:00",
							"url": {
								"value": "https://*.asazure.windows.net/servers/dbrdashboard/models/PG_DA_Olap_PCodeLvl/refreshes",
								"type": "Expression"
							},
							"body": {
								"value": "@json(activity('SpGetCubeDetails').output.firstRow.Cubedetails)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "GetRefreshId",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Pcode_ActivityAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"Content-Type": "application/json"
							},
							"httpRequestTimeout": "00:05:00",
							"url": {
								"value": "https://*.asazure.windows.net/servers/dbrdashboard/models/PG_DA_Olap_PCodeLvl/refreshes",
								"type": "Expression"
							},
							"body": {
								"value": "{\"Type\":\"Full\",\"CommitMode\":\"transactional\",\"MaxParallelism\":2,\"RetryCount\":2,\"Objects\":[{\"database\":\"PG_DMS\",\"table\":\"tblFactCFR\",\"partition\":\"PartitionCurrentQuarter_FactCFRData\"},{\"database\":\"PG_DMS\",\"table\":\"tblFactCOS\",\"partition\":\"PartitionCurrentQuarter_FactCOSData\"}]}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "Set Array VarOuter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetRefreshId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ArrayVar",
							"value": {
								"value": "@json(activity('GetRefreshId').output.Response)\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Status variableOuter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Array VarOuter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@variables('ArrayVar')[0].status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set RefreshId variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Status variableOuter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RefreshId",
							"value": {
								"value": "@variables('ArrayVar')[0].refreshId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set RefreshId variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(or(equals(variables('status'),'inProgress'),equals(variables('status'),'notStarted')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CubeProcessingCheck",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Content-Type": "application/json"
										},
										"httpRequestTimeout": "00:05:00",
										"url": {
											"value": "@concat('https://aspaaseastus2.asazure.windows.net/servers/dbrdashboard/models/PG_DA_Olap_PCodeLvl/refreshes/',variables('RefreshId'))",
											"type": "Expression"
										},
										"body": {
											"value": "{\"Type\":\"Full\",\"CommitMode\":\"transactional\",\"MaxParallelism\":2,\"RetryCount\":2,\"Objects\":[{\"database\":\"PG_DMS\",\"table\":\"tblFactCFR\",\"partition\":\"PartitionCurrentQuarter_FactCFRData\"},{\"database\":\"PG_DMS\",\"table\":\"tblFactCOS\",\"partition\":\"PartitionCurrentQuarter_FactCOSData\"}]}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://*.asazure.windows.net"
										}
									}
								},
								{
									"name": "Set Array VarOuter_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CubeProcessingCheck",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "status",
										"value": {
											"value": "@activity('CubeProcessingCheck').output.status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set Array VarOuter_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('status'),'inProgress')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait5min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "If Condition1_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(variables('status'),'succeeded'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send Notification_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "avinash@astix.in,alok@astix.in,phegade.md@pg.com",
											"Subject": "Cube Fact Processing Successful",
											"ErrorMessage": "DataFoundation Cube Fact Processing Success"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Send Notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "avinash@astix.in,alok@astix.in,gaurav@astix.in,phegade.md@pg.com",
											"Subject": "Cube Fact Processing Not Successful",
											"ErrorMessage": "DataFoundation Cube Fact Processing Fails"
										}
									}
								}
							]
						}
					},
					{
						"name": "AS_ResumeandScale_S8",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Condition1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_ResumeandScale_S8v2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpGetCubeDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCubeDetails]",
								"storedProcedureParameters": {
									"CurrentDate": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									"TypeID": {
										"type": "Int32",
										"value": "0"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"flgcalled": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"ArrayVar": {
						"type": "Array",
						"defaultValue": [
							"test"
						]
					},
					"status": {
						"type": "String",
						"defaultValue": "inProgress"
					},
					"RefreshId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Resource Management"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AS_CubeProcess_Pcode_Sync_Fact_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AS_CubeProcess_Pcode_ActivityAPI",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "spGetCubeDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"httpRequestTimeout": "00:05:00",
							"url": {
								"value": "https://aspaaseastus2.asazure.windows.net/servers/dbrdashboard/models/PG_DA_Olap_PCodeLvl/refreshes",
								"type": "Expression"
							},
							"body": {
								"value": "@json(activity('spGetCubeDetails').output.firstRow.Cubedetails)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://aspaaseastus2.asazure.windows.net"
							}
						}
					},
					{
						"name": "GetRefreshId",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Pcode_ActivityAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"Content-Type": "application/json"
							},
							"httpRequestTimeout": "00:05:00",
							"url": {
								"value": "https://aspaaseastus2.asazure.windows.net/servers/dbrdashboard/models/PG_DA_Olap_PCodeLvl/refreshes",
								"type": "Expression"
							},
							"body": {
								"value": "{\"Type\":\"Full\",\"CommitMode\":\"transactional\",\"MaxParallelism\":2,\"RetryCount\":2,\"Objects\":[{\"database\":\"PG_DMS\",\"table\":\"tblFactCFR\",\"partition\":\"PartitionCurrentQuarter_FactCFRData\"},{\"database\":\"PG_DMS\",\"table\":\"tblFactCOS\",\"partition\":\"PartitionCurrentQuarter_FactCOSData\"}]}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://aspaaseastus2.asazure.windows.net"
							}
						}
					},
					{
						"name": "Set Array VarOuter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReSet Array VarOuter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ArrayVar",
							"value": {
								"value": "@json(activity('GetRefreshId').output.Response)\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Status variableOuter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Array VarOuter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@variables('ArrayVar')[0].status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set RefreshId variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Status variableOuter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RefreshId",
							"value": {
								"value": "@variables('ArrayVar')[0].refreshId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set RefreshId variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(or(equals(variables('status'),'inProgress'),equals(variables('status'),'notStarted')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CubeProcessingCheck",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Content-Type": "application/json"
										},
										"httpRequestTimeout": "00:05:00",
										"url": {
											"value": "@concat('https://aspaaseastus2.asazure.windows.net/servers/dbrdashboard/models/PG_DA_Olap_PCodeLvl/refreshes/',variables('RefreshId'))",
											"type": "Expression"
										},
										"body": {
											"value": "{\"Type\":\"Full\",\"CommitMode\":\"transactional\",\"MaxParallelism\":2,\"RetryCount\":2,\"Objects\":[{\"database\":\"PG_DMS\",\"table\":\"tblFactCFR\",\"partition\":\"PartitionCurrentQuarter_FactCFRData\"},{\"database\":\"PG_DMS\",\"table\":\"tblFactCOS\",\"partition\":\"PartitionCurrentQuarter_FactCOSData\"}]}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://aspaaseastus2.asazure.windows.net"
										}
									}
								},
								{
									"name": "Set Array VarOuter_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CubeProcessingCheck",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "status",
										"value": {
											"value": "@activity('CubeProcessingCheck').output.status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set Array VarOuter_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('status'),'inProgress')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait5min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "spGetCubeDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCubeDetails_Astix]",
								"storedProcedureParameters": {
									"CurrentDate": {
										"type": "DateTime",
										"value": {
											"value": "@pipeline().parameters.processdate",
											"type": "Expression"
										}
									},
									"TypeID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.TypeID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ReSet Array VarOuter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetRefreshId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ArrayVar",
							"value": {
								"value": "@json(string(''))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"flgcalled": {
						"type": "int",
						"defaultValue": 1
					},
					"TypeID": {
						"type": "int",
						"defaultValue": 0
					},
					"processdate": {
						"type": "string"
					}
				},
				"variables": {
					"ArrayVar": {
						"type": "Array",
						"defaultValue": [
							"test"
						]
					},
					"status": {
						"type": "String",
						"defaultValue": "inProgress"
					},
					"RefreshId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Resource Management"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}