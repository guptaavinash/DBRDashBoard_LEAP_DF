{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Focusbrandcubeprocessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spPopulateFactFocusBrandData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactFocusBrandData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FocusBrand_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactFocusBrandData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 7,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"RptMonthYear": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HawkeyeDataImport')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRouteSummary",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRouteSummary",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Container": {
									"value": "@pipeline().parameters.Container",
									"type": "Expression"
								},
								"ProcessedDataDate": {
									"value": "@pipeline().parameters.ProcessedDataDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyRouteData",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyRouteSummary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRouteData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Container": {
									"value": "@pipeline().parameters.Container",
									"type": "Expression"
								},
								"ProcessedDataDate": {
									"value": "@pipeline().parameters.ProcessedDataDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyStoreData",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyRouteData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStoreData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Container": {
									"value": "@pipeline().parameters.Container",
									"type": "Expression"
								},
								"ProcessedDataDate": {
									"value": "@pipeline().parameters.ProcessedDataDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"ProcessedDataDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Hawk Eye"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDCMPExtract_05Jan2024')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,varun@astix.in,helpdesk@astix.in,trivedi.dt.1@pg.com",
								"Subject": "API Process Success",
								"ErrorMessage": "API process and files generated successful"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Job_10Aug2023')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DCC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DCC_Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DCC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DCC_Processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDataHubDataPopulation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DCC_Processing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spDataHubDataPopulation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataHubDataPopulation]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataFullProcessDaily_V2_05May2023')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PurdDataFileGeneration_Temp",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PurdDataFileGeneration_Temp",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Purchase History Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PurdDataFileGeneration_Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "trivedi.dt.1@pg.com,maiti.am@pg.com,vishalbhai.jagdishbhai.bhimda@gds.ey.com,umesh.gupta1@gds.ey.com",
								"Subject": "Purchase History File generation notification",
								"ErrorMessage": "Daily Purchase history file is generated."
							}
						}
					},
					{
						"name": "spAPI_PopulateExtractIDCMP-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Purchase History Send Notification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAPI_PopulateExtractIDCMP]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spAPI_PopulateExtractIDCMP-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,varun@astix.in,helpdesk@astix.in,trivedi.dt.1@pg.com",
								"Subject": "API Process Success",
								"ErrorMessage": "API process and files generated successful"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataFullProcessDaily_V2_LeapExtract')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "PurdDataFileGeneration_Temp",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PurdDataFileGeneration_Temp",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Purchase History Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PurdDataFileGeneration_Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "trivedi.dt.1@pg.com,maiti.am@pg.com,vishalbhai.jagdishbhai.bhimda@gds.ey.com,umesh.gupta1@gds.ey.com",
								"Subject": "Purchase History File generation notification",
								"ErrorMessage": "Daily Purchase history file is generated."
							}
						}
					},
					{
						"name": "spAPI_PopulateExtractIDCMP-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Purchase History Send Notification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAPI_PopulateExtractIDCMP]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spAPI_PopulateExtractIDCMP-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,varun@astix.in,helpdesk@astix.in,trivedi.dt.1@pg.com",
								"Subject": "API Process Success",
								"ErrorMessage": "API process and files generated successful"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_OnlyProcess')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Delete Staging Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spLoadLeapTasIntegration",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Delete Staging Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutLastSpCalled')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-06-20T05:07:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyADLS_To_LEAPStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Delete Staging Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spLoadLeapTasIntegration",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Delete Staging Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyADLS_To_LEAPStaging",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyADLS_To_LEAPStaging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Container": {
									"value": "@pipeline().parameters.Container",
									"type": "Expression"
								},
								"Directory": {
									"value": "@pipeline().parameters.Directory",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutProcessingMovement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Delete Staging Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutProcessing_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Productmasterprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpLoadLeapTASIntegration_Error",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "LoadLeapTasIntegration",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
											"Subject": "TAS Datafactory Error",
											"ErrorMessage": "SpLoadLeapTASIntegration Failed, log on to portal for more details"
										}
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]",
							"storedProcedureParameters": {
								"CalledFrom": {
									"value": "1",
									"type": "Byte"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_S4_DB]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Productmasterprocessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Productmasterprocessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spDailyRefreshSchemeData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyRefreshSchemeData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDailyRefreshScheme_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDailyRefreshSchemeData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "SpDailyRefreshSchemeData Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "SpDailyDataRefreshSalesData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "Datafactory Error",
								"ErrorMessage": "SpDailyDataRefreshSalesData failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "CopyFiletoDBPart1_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "Copy FiletoDB Part1 Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "CopyFiletoDBPart2_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "Copy FiletoDB Part2 Failed, log on to portal for more details"
							}
						}
					},
					{
						"name": "SpDSETeleCallingStores_Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "TAS Datafactory Error",
								"ErrorMessage": "SpDSETeleCallingStores Failed, log on to portal for more details"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutSchemeRefresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_GP_Gen5_2]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-16T05:05:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_fromloading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOLDDatafromtmptables_DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Productmasterprocessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]",
							"storedProcedureParameters": {
								"CalledFrom": {
									"value": "1",
									"type": "Byte"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_S4_DB]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Productmasterprocessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Productmasterprocessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOLDDatafromtmptables_DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmptables_DF]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDailyDataRefreshSalesData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "Datafactory Error",
								"ErrorMessage": "SpDailyDataRefreshSalesData failed, log on to portal for more details"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-11T03:28:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until All Set Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(greaterOrEquals(variables('NoOFTotalSets'),variables('CurrentSetNo')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LeapDataProcessing-Step1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LeapDataProcessing-Set",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CloudInstance": {
												"value": "@pipeline().parameters.CloudInstance",
												"type": "Expression"
											},
											"Step": {
												"value": "@variables('CurrentSetNo')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set Completed Count",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "LeapDataProcessing-Step1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentSetNo",
										"value": {
											"value": "@string(add(int(variables('PreviousSetNo')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousSetNo",
										"value": {
											"value": "@variables('CurrentSetNo')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Completed Count_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "LeapDataProcessing-Step1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentSetNo",
										"value": {
											"value": "@string(add(int(variables('PreviousSetNo')),1))",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CloudInstance": {
						"type": "string"
					}
				},
				"variables": {
					"NoOFTotalSets": {
						"type": "String",
						"defaultValue": "8"
					},
					"CurrentSetNo": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousSetNo": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapData_Factandcubeprocessing_V2_backup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SprefreshMaximusphase",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spRefreshMaximusPhase]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Cube Dimension Processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SprefreshMaximusphase",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 14,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "spPopulateFactCOSData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactCOSData_PCode]",
							"storedProcedureParameters": {
								"RptMonthYear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactSalesData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactSalesData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactTargetData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactTargetData_PCode]",
							"storedProcedureParameters": {
								"RptMonthYear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactCFRData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactCFRData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactInventoryData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactInventoryData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactARData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactARData_PCode]",
							"storedProcedureParameters": {
								"RptMonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactOrderData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactOrderData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "COS_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactCOSData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 6,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Sales_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactSalesData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 1,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Target_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactTargetData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 11,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CFR_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactCFRData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 5,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Inventory_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactInventoryData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 8,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "AR_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactARData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 4,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Order_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactOrderData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 12,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "spPopulateFactCoverageData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spPopulateFactSalesData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactCoverageData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coverage_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spUpdateFactCoverageForTASCalls_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 2,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "spUpdateActualInvDetail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spPopulateFactCoverageData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateActualInvDetail]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spUpdateFactCoverageForTASCalls_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spUpdateActualInvDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateFactCoverageForTASCalls_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactStoreDistribution_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spUpdateFactCoverageForTASCalls_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactStoreDistribution_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StoreDistribution_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactStoreDistribution_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 13,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CoverageStoreLvl_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spUpdateFactCoverageForTASCalls_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 3,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"RptMonthYear": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadER-To-DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetERFileDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Checkfiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileDetails').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileList",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ERStorageSourceDataset_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"folder": " ",
												"directory": "cntelasticrun"
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpERFileImportLog_Start",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "150",
															"activities": [
																{
																	"name": "ERStoremaster",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_period",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "time_perd_start_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "trade_channel_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "in_coverage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "golden",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "store_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "storeaddress_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "storeaddress_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "store_address_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "zip_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "generic_text_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "generic_text_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "generic_text_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "generic_text_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "generic_text_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "generic_num_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "generic_num_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "generic_num_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "generic_num_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "generic_num_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "extra_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "extra_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "extra_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 33
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 34
																					},
																					"sink": {
																						"name": "extra_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 35
																					},
																					"sink": {
																						"name": "extra_field_6",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 36
																					},
																					"sink": {
																						"name": "extra_field_7",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 37
																					},
																					"sink": {
																						"name": "extra_field_8",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 38
																					},
																					"sink": {
																						"name": "extra_field_9",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 39
																					},
																					"sink": {
																						"name": "extra_field_10",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 40
																					},
																					"sink": {
																						"name": "extra_field_11",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 41
																					},
																					"sink": {
																						"name": "extra_field_12",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 42
																					},
																					"sink": {
																						"name": "extra_field_13",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 43
																					},
																					"sink": {
																						"name": "extra_field_14",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 44
																					},
																					"sink": {
																						"name": "extra_field_15",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 45
																					},
																					"sink": {
																						"name": "extra_field_16",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 46
																					},
																					"sink": {
																						"name": "extra_field_17",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 47
																					},
																					"sink": {
																						"name": "extra_field_18",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 48
																					},
																					"sink": {
																						"name": "extra_field_19",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																	"type": "SqlServerStoredProcedure",
																	"dependsOn": [
																		{
																			"activity": "ERStoremaster",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_RTRM_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "StoreMaster",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_StoreMaster",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "151",
															"activities": [
																{
																	"name": "ERSales",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_perd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "day_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "derived_isis_cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "prod_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "geo_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "org_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "proft_ctr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "scndr_ship_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "trade_chanl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "iso_crncy_code_char",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "mm_hybrid_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "func_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "captl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "measr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "brand",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "genrc_dmnsn_1_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "genrc_dmnsn_3_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "fact_qlty_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "niv_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "niv_total",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "attr_val_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "su",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "giv",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																	"type": "SqlServerStoredProcedure",
																	"dependsOn": [
																		{
																			"activity": "ERSales",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_Sales_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile_copy1",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "Sales",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_Sales",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile_copy1",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														}
													]
												}
											},
											{
												"name": "SpERFileImportLog_Start",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "1",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "SpERFileImportLog_End",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "IfFileFound",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "2",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadER-To-DB_08Feb2024')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetERFileDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Checkfiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileDetails').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileList",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ERStorageSourceDataset_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"folder": " ",
												"directory": "cntelasticrun"
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpERFileImportLog_Start",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "150",
															"activities": [
																{
																	"name": "ERStoremaster",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_period",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "time_perd_start_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "trade_channel_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "in_coverage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "golden",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "store_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "storeaddress_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "storeaddress_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "store_address_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "zip_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "generic_text_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "generic_text_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "generic_text_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "generic_text_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "generic_text_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "generic_num_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "generic_num_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "generic_num_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "generic_num_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "generic_num_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "extra_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "extra_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "extra_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 33
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 34
																					},
																					"sink": {
																						"name": "extra_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 35
																					},
																					"sink": {
																						"name": "extra_field_6",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 36
																					},
																					"sink": {
																						"name": "extra_field_7",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 37
																					},
																					"sink": {
																						"name": "extra_field_8",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 38
																					},
																					"sink": {
																						"name": "extra_field_9",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 39
																					},
																					"sink": {
																						"name": "extra_field_10",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 40
																					},
																					"sink": {
																						"name": "extra_field_11",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 41
																					},
																					"sink": {
																						"name": "extra_field_12",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 42
																					},
																					"sink": {
																						"name": "extra_field_13",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 43
																					},
																					"sink": {
																						"name": "extra_field_14",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 44
																					},
																					"sink": {
																						"name": "extra_field_15",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 45
																					},
																					"sink": {
																						"name": "extra_field_16",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 46
																					},
																					"sink": {
																						"name": "extra_field_17",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 47
																					},
																					"sink": {
																						"name": "extra_field_18",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 48
																					},
																					"sink": {
																						"name": "extra_field_19",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																	"type": "SqlServerStoredProcedure",
																	"state": "Inactive",
																	"onInactiveMarkAs": "Succeeded",
																	"dependsOn": [
																		{
																			"activity": "ERStoremaster",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_RTRM_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile",
																	"type": "ExecutePipeline",
																	"state": "Inactive",
																	"onInactiveMarkAs": "Succeeded",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "StoreMaster",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_StoreMaster",
																	"type": "ExecutePipeline",
																	"state": "Inactive",
																	"onInactiveMarkAs": "Succeeded",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "151",
															"activities": [
																{
																	"name": "ERSales",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_perd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "day_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "derived_isis_cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "prod_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "geo_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "org_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "proft_ctr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "scndr_ship_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "trade_chanl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "iso_crncy_code_char",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "mm_hybrid_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "func_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "captl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "measr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "brand",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "genrc_dmnsn_1_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "genrc_dmnsn_3_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "fact_qlty_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "niv_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "niv_total",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "attr_val_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "su",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "giv",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																	"type": "SqlServerStoredProcedure",
																	"dependsOn": [
																		{
																			"activity": "ERSales",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_Sales_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile_copy1",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "Sales",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_Sales",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile_copy1",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														}
													]
												}
											},
											{
												"name": "SpERFileImportLog_Start",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "1",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "SpERFileImportLog_End",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "IfFileFound",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "2",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFile-Staging-To-DB_DRCP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LoadFile-ADLS-To-DB",
				"activities": [
					{
						"name": "GetFileList_Cloud1",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud1",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList_Cloud1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),bool(startswith(item().name,'DRCP_cloud01_')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud1",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DRCP_Could1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud01_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud1",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name\n",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															},
															{
																"name": "FileSetID",
																"value": "0"
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														},
														"disableMetricsCollection": false
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "FileSetID",
																	"type": "String"
																},
																"sink": {
																	"name": "FileSetId",
																	"type": "Int64"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_V2_Cloud1",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_Cloud1_Temp",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "EXEC spDataLoadRawLeapTAS_DRCP_Cloud1",
												"type": "SqlServerStoredProcedure",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "DRCP_Cloud1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spDataLoadRawLeapTAS_DRCP_Cloud1]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetFileList_Cloud2",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud2",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList_Cloud2').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),bool(startswith(item().name,'DRCP_cloud02_')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud2",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud2').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DRCP_Could2",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud02_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spDataLoadRawLeapTAS_DRCP_Cloud2",
												"type": "SqlServerStoredProcedure",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "DRCP_Cloud2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spDataLoadRawLeapTAS_DRCP_Cloud2]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DRCP_Cloud2",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															},
															{
																"name": "FileSetID",
																"value": "0"
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														},
														"disableMetricsCollection": false
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "FileSetID",
																	"type": "String"
																},
																"sink": {
																	"name": "FileSetId",
																	"type": "Int64"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_V2_Cloud2",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_Cloud2_Temp",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetFileList_Cloud3",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud3",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList_Cloud3').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),bool(startswith(item().name,'DRCP_cloud03_')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud3",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud3').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DRCP_Could3",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud03_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spDataLoadRawLeapTAS_DRCP_Cloud3",
												"type": "SqlServerStoredProcedure",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "DRCP_Cloud3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spDataLoadRawLeapTAS_DRCP_Cloud3]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DRCP_Cloud3",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															},
															{
																"name": "FileSetID",
																"value": "0"
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														},
														"disableMetricsCollection": false
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "FileSetID",
																	"type": "String"
																},
																"sink": {
																	"name": "FileSetId",
																	"type": "Int64"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_V2_Cloud3",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_Cloud3_Temp",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Maximus Rurban Split')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "tbltmpRurbanSplit",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MX-spPopulateStoreListWithTownType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tbltmpRurbanSplit",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "PolybaseLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StoreCode",
											"type": "String"
										},
										"sink": {
											"name": "StoreCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "flgTownType",
											"type": "Byte"
										},
										"sink": {
											"name": "flgTownType",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "flgActive",
											"type": "Byte"
										},
										"sink": {
											"name": "flgActive",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "CV_VillageId",
											"type": "Int32"
										},
										"sink": {
											"name": "CV_VillageId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CV_VillageCode",
											"type": "String"
										},
										"sink": {
											"name": "CV_VillageCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_VillageName",
											"type": "String"
										},
										"sink": {
											"name": "CV_VillageName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_VillageLvl",
											"type": "String"
										},
										"sink": {
											"name": "CV_VillageLvl",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_Population",
											"type": "Int32"
										},
										"sink": {
											"name": "CV_Population",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CV_SubDistrict",
											"type": "String"
										},
										"sink": {
											"name": "CV_SubDistrict",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_District",
											"type": "String"
										},
										"sink": {
											"name": "CV_District",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_State",
											"type": "String"
										},
										"sink": {
											"name": "CV_State",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PowerVillage",
											"type": "String"
										},
										"sink": {
											"name": "PowerVillage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ABCD_Classification",
											"type": "String"
										},
										"sink": {
											"name": "ABCD_Classification",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Maximus_tbltmpRurbanSplit",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tbltmpRurbanSplit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MX-spPopulateStoreListWithTownType",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MX-spImportForNewStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateStoreListWithTownType]"
						},
						"linkedServiceName": {
							"referenceName": "MaximusDBLink",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MX-spImportForNewStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait 30 min",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW_Resume_Scale_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportForNewStores]"
						},
						"linkedServiceName": {
							"referenceName": "MaximusDBLink",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF-spUpdateRurbanSplitInStoreMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "tbltmpRurbanSplit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateRurbanSplitInStoreMaster]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Scale 800 DTU",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S7",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Wait 30 min",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Scale 800 DTU",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1800
						}
					},
					{
						"name": "Scale 10 DTU Step1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MX-spImportForNewStores",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Step2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MX-spPopulateStoreListWithTownType",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Step3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tbltmpRurbanSplit",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Step4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DF-spUpdateRurbanSplitInStoreMaster",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Success",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Maximus-CDL-Transfer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "DW_Resume_Scale_V2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Resume_Scale_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ScaleVal": "DW100c",
								"flgcalled": 0
							}
						}
					},
					{
						"name": "Maximus-CDL-Transfer",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DF-spUpdateRurbanSplitInStoreMaster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Maximus-CDL-Transfer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataProcessDate": {
									"value": "@pipeline().parameters.Dminus1Date",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Dminus1Date": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MorningProcessCompleteCheck_Container')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpMonthStartProcessingCheck",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpMonthStartProcessingCheck]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpMonthStartProcessingCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpMonthStartProcessingCheck').output.firstRow.flgProcessOK,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "MorningProcessCompleteCheck",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MorningProcessCompleteCheck",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"flgCanProcessStart": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}