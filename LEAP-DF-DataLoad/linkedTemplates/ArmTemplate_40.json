{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		},
		"CCCRDataProcessing_properties_CCCRDataProcessing_V2_parameters_DataDate": {
			"type": "string",
			"defaultValue": "@formatDateTime(utcNow(),'dd-MMM-yyyy')"
		},
		"CCCRDataProcessing_properties_CCCRDataProcessing_V2_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"CCCRDataProcessing_properties_CCCRDataProcessing_V2_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"NCSSUBDDataLoadingFromAstixServer_Day_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType": {
			"type": "int",
			"defaultValue": 1
		},
		"NCSSUBDDataLoadingFromAstixServer_Night_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType": {
			"type": "int",
			"defaultValue": 2
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spLoadLeapTasIntegration",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait 1 min",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadLeapTasIntegration",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "cntleap",
								"Folder": {
									"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DFDataOlapProcess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataOlapProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_Scale_200",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success Notification",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "AS_Scale_S2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW200c"
							}
						}
					},
					{
						"name": "FocusBrandLoading-LEAP-TO-DF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadLeapTasIntegration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FocusBrandLoading-LEAP-TO-DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AS_Resume",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataOlapProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Resume",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait_AS_Scaling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Scale_200",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1_NoDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2_NoDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_NoDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "API All Extract Data Populate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DFDataAPIProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateAPIAllExtract]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API All Extract Data Populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "API Process Success",
								"ErrorMessage": "API process and files generated successful"
							}
						}
					},
					{
						"name": "DFDataAPIProcess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataAPIProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Notification1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadLeapTasIntegration",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1_copy1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_4",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1_copy1_copy1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1_copy1_copy1_copy1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1_copy1_copy1_copy1_copy1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataOlapProcess",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "TASDataUpdate",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASDataUpdate",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Notification1_copy1_copy2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASDataUpdate",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "AS_Scale_S2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Scale_S2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AS_Scale_S4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Scale_S4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait_AS_Scaling",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Scale_S4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "Wait 1 min",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "DW_Scale_500",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					},
					{
						"name": "DW_Scale_500",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW400c"
							}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_30May2022')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "cntleap",
								"Folder": {
									"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DFDataOlapProcess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataOlapProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_Scale_200",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success Notification",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "AS_Scale_S2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW200c"
							}
						}
					},
					{
						"name": "FocusBrandLoading-LEAP-TO-DF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FocusBrandLoading-LEAP-TO-DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AS_Resume",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataOlapProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Resume",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait_AS_Scaling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Scale_200",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "API All Extract Data Populate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DFDataAPIProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateAPIAllExtract]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API All Extract Data Populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "API Process Success",
								"ErrorMessage": "API process and files generated successful"
							}
						}
					},
					{
						"name": "DFDataAPIProcess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataAPIProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Notification1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataOlapProcess",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "AS_Scale_S2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Scale_S2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AS_Scale_S4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Scale_S4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait_AS_Scaling",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Scale_S4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_31May2022')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spLoadLeapTasIntegration",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait 10 min",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadLeapTasIntegration",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "cntleap",
								"Folder": {
									"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DFDataOlapProcess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataOlapProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_Scale_200",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success Notification",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "AS_Scale_S2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW200c"
							}
						}
					},
					{
						"name": "FocusBrandLoading-LEAP-TO-DF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadLeapTasIntegration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FocusBrandLoading-LEAP-TO-DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AS_Resume",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataOlapProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Resume",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait_AS_Scaling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Scale_200",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_4",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "API All Extract Data Populate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DFDataAPIProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateAPIAllExtract]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API All Extract Data Populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "API Process Success",
								"ErrorMessage": "API process and files generated successful"
							}
						}
					},
					{
						"name": "DFDataAPIProcess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataAPIProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Notification1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadLeapTasIntegration",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification1_copy1_copy1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_4",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataOlapProcess",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "Send Notification_copy3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "AS_Scale_S2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Scale_S2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AS_Scale_S4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Scale_S4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait_AS_Scaling",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Scale_S4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "Wait 10 min",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "DW_Scale_500",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 600
						}
					},
					{
						"name": "DW_Scale_500",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW400c"
							}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_WithDPSR",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_WithDPSR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_WithDPSR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Delete Staging Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spLoadLeapTasIntegration",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spLoadLeapTasIntegration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "cntleap",
								"Folder": {
									"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DFDataProcessAfterLoading",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataOlapProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_Scale_200",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW200c"
							}
						}
					},
					{
						"name": "FocusBrandLoading-LEAP-TO-DF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete Staging Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FocusBrandLoading-LEAP-TO-DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AS_Resume",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataProcessAfterLoading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Resume",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Container",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@item().name",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCCRDataProcessing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CCCRDataProcessing_V2",
							"type": "PipelineReference"
						},
						"parameters": {
							"DataDate": "[parameters('CCCRDataProcessing_properties_CCCRDataProcessing_V2_parameters_DataDate')]",
							"windowStart": "[parameters('CCCRDataProcessing_properties_CCCRDataProcessing_V2_parameters_windowStart')]",
							"windowEnd": "[parameters('CCCRDataProcessing_properties_CCCRDataProcessing_V2_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-08T11:23:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								14
							],
							"hours": [
								14,
								16,
								18,
								22,
								12
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FocusBrandLoading')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FocusBrandLoading-LEAP-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-02-28T09:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapFileLoading_WithoutProcessing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeapDataMovement_WithoutLoading",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowStart')]",
							"windowEnd": "[parameters('LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-02T08:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSSUBDDataLoadingFromAstixServer_Day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "NCSDataTransfer-ASTIX-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {
							"ProcessingType": "[parameters('NCSSUBDDataLoadingFromAstixServer_Day_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T14:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								14
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSSUBDDataLoadingFromAstixServer_Night')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "NCSDataTransfer-ASTIX-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {
							"ProcessingType": "[parameters('NCSSUBDDataLoadingFromAstixServer_Night_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T04:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WINTIT Processing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "WINIT Daily Processing",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-11T10:29:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud1Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 1 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud1').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud1Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "1"
												},
												"Step": {
													"type": "Byte",
													"value": {
														"value": "@pipeline().parameters.Step",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud1Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud1Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											},
											"Step": {
												"value": "@pipeline().parameters.Step",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "20"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud1Processing_SBD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 1 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud1').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud1Pipeline_SBD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "1"
												},
												"Step": {
													"type": "Byte",
													"value": {
														"value": "@pipeline().parameters.Step",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud1Pipeline_SBD",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud1Pipeline_SBD",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											},
											"Step": {
												"value": "@pipeline().parameters.Step",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "20"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "SBD Processing"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud1Processing_Step1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 1 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud1').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud1Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "1"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud1Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud1Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud2Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 2 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud2').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud2Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "2"
												},
												"Step": {
													"type": "Byte",
													"value": {
														"value": "@pipeline().parameters.Step",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud2Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud2Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											},
											"Step": {
												"value": "@pipeline().parameters.Step",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "20"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud2Processing_SBD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 2 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud2').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud2Pipeline_SBD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "2"
												},
												"Step": {
													"type": "Byte",
													"value": {
														"value": "@pipeline().parameters.Step",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud2Pipeline_SBD",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud2Pipeline_SBD",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											},
											"Step": {
												"value": "@pipeline().parameters.Step",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "20"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "SBD Processing"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud2Processing_Step1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 2 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud2').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud2Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "2"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud2Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud2Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud3Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 3 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud3').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud3Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "3"
												},
												"Step": {
													"type": "Byte",
													"value": {
														"value": "@pipeline().parameters.Step",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud3Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud3Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											},
											"Step": {
												"value": "@pipeline().parameters.Step",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "20"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud3Processing_SBD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 3 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud3').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud3Pipeline_SBD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "3"
												},
												"Step": {
													"type": "Byte",
													"value": {
														"value": "@pipeline().parameters.Step",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud3Pipeline_SBD",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud3Pipeline_SBD",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											},
											"Step": {
												"value": "@pipeline().parameters.Step",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "20"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "SBD Processing"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud3Processing_Step1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 3 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(int(variables('MaxNoofCheck')),int(variables('CurrentCountNoofCheck')))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud3').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud3Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "3"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud3Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud3Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set flgFullProcessingPending",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('flgFullProcessingPending'),'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "11"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}