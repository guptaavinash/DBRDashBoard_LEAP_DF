{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PnGExternalDataCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 1000000,
									"fileNamePrefix": "DBR",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tmpDataForrakesh_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tmpDataForrakesh_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PnGExternalData"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Productmasterprocessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spDataLoadRawProductMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawProductMaster]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "producthierarchycopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spDataLoadRawProductMaster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tmpTransferProductHierarchy",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LEHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LEHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LENodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LENodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LENodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LENodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BrandHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrandNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrandNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BFCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BFCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBFCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SKUHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "DLP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "DLP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "SAPUPC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SAPUPC",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ProdHierarchy_DF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProdHierarchy_TAS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spTransferProductMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "producthierarchycopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTransferProductMaster]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-24T12:52:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurdDataFileGeneration_Temp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy PURD Cloud1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataDatetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud01' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud1\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud1','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DataDatetime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DeleteDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TimeToday",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcnow(),'UTC','India Standard Time'),1,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataDeleteDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcnow(),'UTC','India Standard Time'),8,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy PURD Cloud2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PURD Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud02' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud2\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud2','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy PURD Cloud3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PURD Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud03' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud3\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\nORDER BY 2\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud3','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TimeToday": {
						"type": "String"
					},
					"DataDeleteDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBDINITStoreTransfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy tblTAS_INITSBDStoreWiseGaps",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblTAS_INITSBDStoreWiseGaps",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblINITSBDStoreWiseGaps_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBDINITStoreTransfer_Copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy tblTAS_INITSBDStoreWiseGaps",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblTAS_INITSBDStoreWiseGaps",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblINITSBDStoreWiseGaps_New",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBDMTRFileimport')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBDMTR_Cloud1",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMTR_cloud01_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMTR_cloud01_2023Sep01.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "group_code",
											"type": "String"
										},
										"sink": {
											"name": "group_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_code",
											"type": "String"
										},
										"sink": {
											"name": "sbf_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_name",
											"type": "String"
										},
										"sink": {
											"name": "sbf_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "moq",
											"type": "String"
										},
										"sink": {
											"name": "moq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_from",
											"type": "String"
										},
										"sink": {
											"name": "effective_from",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_to",
											"type": "String"
										},
										"sink": {
											"name": "effective_to",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_base",
											"type": "String"
										},
										"sink": {
											"name": "is_base",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMTR_Cloud1",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMTR_Cloud3",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMTR_cloud03_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMTR_cloud03_2023Sep01.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "group_code",
											"type": "String"
										},
										"sink": {
											"name": "group_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_code",
											"type": "String"
										},
										"sink": {
											"name": "sbf_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_name",
											"type": "String"
										},
										"sink": {
											"name": "sbf_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "moq",
											"type": "String"
										},
										"sink": {
											"name": "moq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_from",
											"type": "String"
										},
										"sink": {
											"name": "effective_from",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_to",
											"type": "String"
										},
										"sink": {
											"name": "effective_to",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_base",
											"type": "String"
										},
										"sink": {
											"name": "is_base",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMTR_Cloud3",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMTR_Cloud2",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMTR_cloud02_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMTR_cloud02_2023Sep01.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "group_code",
											"type": "String"
										},
										"sink": {
											"name": "group_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_code",
											"type": "String"
										},
										"sink": {
											"name": "sbf_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_name",
											"type": "String"
										},
										"sink": {
											"name": "sbf_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "moq",
											"type": "String"
										},
										"sink": {
											"name": "moq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_from",
											"type": "String"
										},
										"sink": {
											"name": "effective_from",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_to",
											"type": "String"
										},
										"sink": {
											"name": "effective_to",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_base",
											"type": "String"
										},
										"sink": {
											"name": "is_base",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMTR_Cloud2",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMPG_Cloud1",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMPG_cloud01_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMPG_cloud01_2023Sep01.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_code",
											"type": "String"
										},
										"sink": {
											"name": "distributor_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMPG_Cloud1",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SBDMTR_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SBDMTR_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SBDMTR_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SBDMPG_Cloud2",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMPG_cloud02_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMPG_cloud02_2023Sep01.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_code",
											"type": "String"
										},
										"sink": {
											"name": "distributor_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMPG_Cloud2",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMPG_Cloud3",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMPG_cloud03_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMPG_cloud03_2023Sep01.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_code",
											"type": "String"
										},
										"sink": {
											"name": "distributor_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMPG_Cloud3",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUBD-To-DB_Temp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SubdFolderpath",
								"type": "DatasetReference",
								"parameters": {
									"Folder": "SBD",
									"Container": "smartbasketcontainer"
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(item().name),'MST')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy SubD MPG Data",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "SBD Name",
																	"type": "String"
																},
																"sink": {
																	"name": "sbd_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Distributor Code",
																	"type": "String"
																},
																"sink": {
																	"name": "distributor_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Branch Code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "DS_SubD_Excel",
														"type": "DatasetReference",
														"parameters": {
															"Filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SubD_ttmpRawLEAPTAS_SBDMPG_HistoryData_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy SubD MST Data",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "SBD Name",
																	"type": "String"
																},
																"sink": {
																	"name": "sbd_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Channel Code",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Channel Name",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Group Code",
																	"type": "String"
																},
																"sink": {
																	"name": "group_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "SBF Code",
																	"type": "String"
																},
																"sink": {
																	"name": "sbf_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "SBF Name",
																	"type": "String"
																},
																"sink": {
																	"name": "sbf_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "MOQ",
																	"type": "String"
																},
																"sink": {
																	"name": "moq",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Effective From",
																	"type": "String"
																},
																"sink": {
																	"name": "effective_from",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Effective To",
																	"type": "String"
																},
																"sink": {
																	"name": "effective_to",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Is Base",
																	"type": "String"
																},
																"sink": {
																	"name": "is_base",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "DS_SubD_Excel",
														"type": "DatasetReference",
														"parameters": {
															"Filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SubD_tmpRawLEAPTAS_SBDMTR_HistoryData_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-01-04T16:41:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesdetail_Anuj')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Salesdetail",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT * FROM tblSalesDetail WHERE Rptmonthyear=202301",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmp_tblSalesDetail_DelIfSeen",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "InvDetId",
											"type": "Int64"
										},
										"sink": {
											"name": "InvDetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InvId",
											"type": "Int64"
										},
										"sink": {
											"name": "InvId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SKUNodeId",
											"type": "Int32"
										},
										"sink": {
											"name": "SKUNodeId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SKUNodeType",
											"type": "Int32"
										},
										"sink": {
											"name": "SKUNodeType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "OrgQuantity",
											"type": "Int32"
										},
										"sink": {
											"name": "OrgQuantity",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DFDatafoundation_Anuj_salesdetail",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DFDatafoundation_Salesdetail_Delifseen",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalessubdFileLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmp_SubD_SAles",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SUBDCODE",
											"type": "String"
										},
										"sink": {
											"name": "SUBDCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DSECODE",
											"type": "String"
										},
										"sink": {
											"name": "DSECODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTCODE",
											"type": "String"
										},
										"sink": {
											"name": "CUSTCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INVNO",
											"type": "String"
										},
										"sink": {
											"name": "INVNO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INVDATE",
											"type": "String"
										},
										"sink": {
											"name": "INVDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SKUCCODE",
											"type": "String"
										},
										"sink": {
											"name": "SKUCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SKUDCODE",
											"type": "String"
										},
										"sink": {
											"name": "SKUDCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SKUEANCODE",
											"type": "String"
										},
										"sink": {
											"name": "SKUEANCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BATCHCODE",
											"type": "String"
										},
										"sink": {
											"name": "BATCHCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QTY",
											"type": "String"
										},
										"sink": {
											"name": "QTY",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GROSSAMOUNT",
											"type": "String"
										},
										"sink": {
											"name": "GROSSAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TAXAMOUNT",
											"type": "String"
										},
										"sink": {
											"name": "TAXAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "INITDISC",
											"type": "String"
										},
										"sink": {
											"name": "INITDISC",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "LINEDISC",
											"type": "String"
										},
										"sink": {
											"name": "LINEDISC",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "NETAMOUNT",
											"type": "String"
										},
										"sink": {
											"name": "NETAMOUNT",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "INVREF",
											"type": "String"
										},
										"sink": {
											"name": "INVREF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SELECTEDDATE",
											"type": "String"
										},
										"sink": {
											"name": "SELECTEDDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TimeStamp",
											"type": "String"
										},
										"sink": {
											"name": "TimeStamp",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "UPC",
											"type": "String"
										},
										"sink": {
											"name": "UPC",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "RETAILING",
											"type": "String"
										},
										"sink": {
											"name": "RETAILING",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SubDSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "tmp_SubD_SAles"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'DPSR_MOR')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DPSR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "document_no",
														"type": "String"
													},
													"sink": {
														"name": "document_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "document_date",
														"type": "String"
													},
													"sink": {
														"name": "document_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "transaction_type",
														"type": "String"
													},
													"sink": {
														"name": "transaction_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "subbrandform_name",
														"type": "String"
													},
													"sink": {
														"name": "subbrandform_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "prod_name",
														"type": "String"
													},
													"sink": {
														"name": "prod_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_name",
														"type": "String"
													},
													"sink": {
														"name": "customer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_code",
														"type": "String"
													},
													"sink": {
														"name": "customer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_description",
														"type": "String"
													},
													"sink": {
														"name": "channel_description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse",
														"type": "String"
													},
													"sink": {
														"name": "dse",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "pcode",
														"type": "String"
													},
													"sink": {
														"name": "pcode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_type",
														"type": "String"
													},
													"sink": {
														"name": "customer_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "hsn_code",
														"type": "String"
													},
													"sink": {
														"name": "hsn_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "category",
														"type": "String"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brand",
														"type": "String"
													},
													"sink": {
														"name": "brand",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandform",
														"type": "String"
													},
													"sink": {
														"name": "brandform",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "quantity",
														"type": "String"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_value",
														"type": "String"
													},
													"sink": {
														"name": "gross_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "discount",
														"type": "String"
													},
													"sink": {
														"name": "discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "taxable_scheme",
														"type": "String"
													},
													"sink": {
														"name": "taxable_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_amount",
														"type": "String"
													},
													"sink": {
														"name": "igsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_amount",
														"type": "String"
													},
													"sink": {
														"name": "cesstax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_code",
														"type": "String"
													},
													"sink": {
														"name": "mracc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_desc",
														"type": "String"
													},
													"sink": {
														"name": "mracc_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "vendor",
														"type": "String"
													},
													"sink": {
														"name": "vendor",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "net_amount",
														"type": "String"
													},
													"sink": {
														"name": "net_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_discount",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_scheme",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_in_rlp",
														"type": "String"
													},
													"sink": {
														"name": "tax_in_rlp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailing",
														"type": "String"
													},
													"sink": {
														"name": "retailing",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_in_slp",
														"type": "String"
													},
													"sink": {
														"name": "gross_in_slp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "po_no",
														"type": "String"
													},
													"sink": {
														"name": "po_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "msu",
														"type": "String"
													},
													"sink": {
														"name": "msu",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "distributor_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "dist_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "ret_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "srn_ref_no",
														"type": "String"
													},
													"sink": {
														"name": "srn_ref_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "composite",
														"type": "String"
													},
													"sink": {
														"name": "composite",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_rate",
														"type": "String"
													},
													"sink": {
														"name": "igsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_rate",
														"type": "String"
													},
													"sink": {
														"name": "cesstax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_name",
														"type": "String"
													},
													"sink": {
														"name": "branch_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_mode",
														"type": "String"
													},
													"sink": {
														"name": "order_mode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_code",
														"type": "String"
													},
													"sink": {
														"name": "tc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_name",
														"type": "String"
													},
													"sink": {
														"name": "tc_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "batch",
														"type": "String"
													},
													"sink": {
														"name": "batch",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "upc",
														"type": "String"
													},
													"sink": {
														"name": "upc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_amount",
														"type": "String"
													},
													"sink": {
														"name": "tcs_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_rate",
														"type": "String"
													},
													"sink": {
														"name": "tcs_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "branch_gst_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_no",
														"type": "String"
													},
													"sink": {
														"name": "dl_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_expiry_date",
														"type": "String"
													},
													"sink": {
														"name": "dl_expiry_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "irn_no",
														"type": "String"
													},
													"sink": {
														"name": "irn_no",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DPSR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_CCCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'CCCR')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CCCR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_location",
														"type": "String"
													},
													"sink": {
														"name": "branch_location",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_name",
														"type": "String"
													},
													"sink": {
														"name": "dse_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "route_name",
														"type": "String"
													},
													"sink": {
														"name": "route_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_code",
														"type": "String"
													},
													"sink": {
														"name": "retailer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_name",
														"type": "String"
													},
													"sink": {
														"name": "retailer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "contact_number_1",
														"type": "String"
													},
													"sink": {
														"name": "contact_number_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "contact_number_2",
														"type": "String"
													},
													"sink": {
														"name": "contact_number_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_name",
														"type": "String"
													},
													"sink": {
														"name": "channel_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sub_channel_name",
														"type": "String"
													},
													"sink": {
														"name": "sub_channel_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "start_time",
														"type": "String"
													},
													"sink": {
														"name": "start_time",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "end_time",
														"type": "String"
													},
													"sink": {
														"name": "end_time",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "intime",
														"type": "String"
													},
													"sink": {
														"name": "intime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_value",
														"type": "String"
													},
													"sink": {
														"name": "order_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "productivity",
														"type": "String"
													},
													"sink": {
														"name": "productivity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "visit_latitude",
														"type": "String"
													},
													"sink": {
														"name": "visit_latitude",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "visit_longitude",
														"type": "String"
													},
													"sink": {
														"name": "visit_longitude",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "deviation_in_meter",
														"type": "String"
													},
													"sink": {
														"name": "deviation_in_meter",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "deviation",
														"type": "String"
													},
													"sink": {
														"name": "deviation",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason_for_deviation",
														"type": "String"
													},
													"sink": {
														"name": "reason_for_deviation",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "on_route",
														"type": "String"
													},
													"sink": {
														"name": "on_route",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_CCCR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_Onefile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DPSR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.Folder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "document_no",
														"type": "String"
													},
													"sink": {
														"name": "document_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "document_date",
														"type": "String"
													},
													"sink": {
														"name": "document_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "transaction_type",
														"type": "String"
													},
													"sink": {
														"name": "transaction_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "subbrandform_name",
														"type": "String"
													},
													"sink": {
														"name": "subbrandform_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "prod_name",
														"type": "String"
													},
													"sink": {
														"name": "prod_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_name",
														"type": "String"
													},
													"sink": {
														"name": "customer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_code",
														"type": "String"
													},
													"sink": {
														"name": "customer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_description",
														"type": "String"
													},
													"sink": {
														"name": "channel_description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse",
														"type": "String"
													},
													"sink": {
														"name": "dse",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "pcode",
														"type": "String"
													},
													"sink": {
														"name": "pcode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_type",
														"type": "String"
													},
													"sink": {
														"name": "customer_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "hsn_code",
														"type": "String"
													},
													"sink": {
														"name": "hsn_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "category",
														"type": "String"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brand",
														"type": "String"
													},
													"sink": {
														"name": "brand",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandform",
														"type": "String"
													},
													"sink": {
														"name": "brandform",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "quantity",
														"type": "String"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_value",
														"type": "String"
													},
													"sink": {
														"name": "gross_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "discount",
														"type": "String"
													},
													"sink": {
														"name": "discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "taxable_scheme",
														"type": "String"
													},
													"sink": {
														"name": "taxable_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_amount",
														"type": "String"
													},
													"sink": {
														"name": "igsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_amount",
														"type": "String"
													},
													"sink": {
														"name": "cesstax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_code",
														"type": "String"
													},
													"sink": {
														"name": "mracc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_desc",
														"type": "String"
													},
													"sink": {
														"name": "mracc_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "vendor",
														"type": "String"
													},
													"sink": {
														"name": "vendor",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "net_amount",
														"type": "String"
													},
													"sink": {
														"name": "net_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_discount",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_scheme",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_in_rlp",
														"type": "String"
													},
													"sink": {
														"name": "tax_in_rlp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailing",
														"type": "String"
													},
													"sink": {
														"name": "retailing",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_in_slp",
														"type": "String"
													},
													"sink": {
														"name": "gross_in_slp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "po_no",
														"type": "String"
													},
													"sink": {
														"name": "po_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "msu",
														"type": "String"
													},
													"sink": {
														"name": "msu",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "distributor_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "dist_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "ret_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "srn_ref_no",
														"type": "String"
													},
													"sink": {
														"name": "srn_ref_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "composite",
														"type": "String"
													},
													"sink": {
														"name": "composite",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_rate",
														"type": "String"
													},
													"sink": {
														"name": "igsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_rate",
														"type": "String"
													},
													"sink": {
														"name": "cesstax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_name",
														"type": "String"
													},
													"sink": {
														"name": "branch_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_mode",
														"type": "String"
													},
													"sink": {
														"name": "order_mode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_code",
														"type": "String"
													},
													"sink": {
														"name": "tc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_name",
														"type": "String"
													},
													"sink": {
														"name": "tc_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "batch",
														"type": "String"
													},
													"sink": {
														"name": "batch",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "upc",
														"type": "String"
													},
													"sink": {
														"name": "upc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_amount",
														"type": "String"
													},
													"sink": {
														"name": "tcs_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_rate",
														"type": "String"
													},
													"sink": {
														"name": "tcs_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "branch_gst_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_no",
														"type": "String"
													},
													"sink": {
														"name": "dl_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_expiry_date",
														"type": "String"
													},
													"sink": {
														"name": "dl_expiry_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "irn_no",
														"type": "String"
													},
													"sink": {
														"name": "irn_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc_date",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc_date",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder_WithComma",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.Folder",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DPSR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_RTDXFormat')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DPSR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('Site PSR Data/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'),formatDateTime(pipeline().parameters.ProcessDate, 'MM'),formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "document_no",
														"type": "String"
													},
													"sink": {
														"name": "document_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "document_date",
														"type": "String"
													},
													"sink": {
														"name": "document_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "transaction_type",
														"type": "String"
													},
													"sink": {
														"name": "transaction_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "subbrandform_name",
														"type": "String"
													},
													"sink": {
														"name": "subbrandform_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "prod_name",
														"type": "String"
													},
													"sink": {
														"name": "prod_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_name",
														"type": "String"
													},
													"sink": {
														"name": "customer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_code",
														"type": "String"
													},
													"sink": {
														"name": "customer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_description",
														"type": "String"
													},
													"sink": {
														"name": "channel_description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse",
														"type": "String"
													},
													"sink": {
														"name": "dse",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "pcode",
														"type": "String"
													},
													"sink": {
														"name": "pcode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_type",
														"type": "String"
													},
													"sink": {
														"name": "customer_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "hsn_code",
														"type": "String"
													},
													"sink": {
														"name": "hsn_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "category",
														"type": "String"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brand",
														"type": "String"
													},
													"sink": {
														"name": "brand",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandform",
														"type": "String"
													},
													"sink": {
														"name": "brandform",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "quantity",
														"type": "String"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_value",
														"type": "String"
													},
													"sink": {
														"name": "gross_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "discount",
														"type": "String"
													},
													"sink": {
														"name": "discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "taxable_scheme",
														"type": "String"
													},
													"sink": {
														"name": "taxable_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_amount",
														"type": "String"
													},
													"sink": {
														"name": "igsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_amount",
														"type": "String"
													},
													"sink": {
														"name": "cesstax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_code",
														"type": "String"
													},
													"sink": {
														"name": "mracc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_desc",
														"type": "String"
													},
													"sink": {
														"name": "mracc_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "vendor",
														"type": "String"
													},
													"sink": {
														"name": "vendor",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "net_amount",
														"type": "String"
													},
													"sink": {
														"name": "net_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_discount",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_scheme",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_in_rlp",
														"type": "String"
													},
													"sink": {
														"name": "tax_in_rlp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailing",
														"type": "String"
													},
													"sink": {
														"name": "retailing",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_in_slp",
														"type": "String"
													},
													"sink": {
														"name": "gross_in_slp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "po_no",
														"type": "String"
													},
													"sink": {
														"name": "po_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "msu",
														"type": "String"
													},
													"sink": {
														"name": "msu",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "distributor_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "dist_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "ret_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "srn_ref_no",
														"type": "String"
													},
													"sink": {
														"name": "srn_ref_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "composite",
														"type": "String"
													},
													"sink": {
														"name": "composite",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_rate",
														"type": "String"
													},
													"sink": {
														"name": "igsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_rate",
														"type": "String"
													},
													"sink": {
														"name": "cesstax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_name",
														"type": "String"
													},
													"sink": {
														"name": "branch_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_mode",
														"type": "String"
													},
													"sink": {
														"name": "order_mode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_code",
														"type": "String"
													},
													"sink": {
														"name": "tc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_name",
														"type": "String"
													},
													"sink": {
														"name": "tc_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "batch",
														"type": "String"
													},
													"sink": {
														"name": "batch",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "upc",
														"type": "String"
													},
													"sink": {
														"name": "upc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_amount",
														"type": "String"
													},
													"sink": {
														"name": "tcs_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_rate",
														"type": "String"
													},
													"sink": {
														"name": "tcs_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "branch_gst_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_no",
														"type": "String"
													},
													"sink": {
														"name": "dl_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_expiry_date",
														"type": "String"
													},
													"sink": {
														"name": "dl_expiry_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "irn_no",
														"type": "String"
													},
													"sink": {
														"name": "irn_no",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder_withoutgzip",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@concat('Site PSR Data/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'),formatDateTime(pipeline().parameters.ProcessDate, 'MM'),formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/')\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DPSR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_WINITCCCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CCCR Detail",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('CCRDetail_',pipeline().parameters.ProcessDate,'.csv')",
											"type": "Expression"
										}
									},
									{
										"name": "Lastmodifieddatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawWinit_CCRDetail",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site",
											"type": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DistributorName",
											"type": "String"
										},
										"sink": {
											"name": "DistributorName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubDName",
											"type": "String"
										},
										"sink": {
											"name": "SubDName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubD Location",
											"type": "String"
										},
										"sink": {
											"name": "SubD Location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DseCode",
											"type": "String"
										},
										"sink": {
											"name": "DseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DseName",
											"type": "String"
										},
										"sink": {
											"name": "DseName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RouteName",
											"type": "String"
										},
										"sink": {
											"name": "RouteName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RetailerCode",
											"type": "String"
										},
										"sink": {
											"name": "RetailerCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RetailerName",
											"type": "String"
										},
										"sink": {
											"name": "RetailerName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactNumber1",
											"type": "String"
										},
										"sink": {
											"name": "ContactNumber1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactNumber2",
											"type": "String"
										},
										"sink": {
											"name": "ContactNumber2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelName",
											"type": "String"
										},
										"sink": {
											"name": "ChannelName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubChannelName",
											"type": "String"
										},
										"sink": {
											"name": "SubChannelName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "String"
										},
										"sink": {
											"name": "StartTime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "String"
										},
										"sink": {
											"name": "EndTime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InTime",
											"type": "String"
										},
										"sink": {
											"name": "InTime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrderValue",
											"type": "String"
										},
										"sink": {
											"name": "OrderValue",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Productivity",
											"type": "String"
										},
										"sink": {
											"name": "Productivity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Reason",
											"type": "String"
										},
										"sink": {
											"name": "Reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SkipReason",
											"type": "String"
										},
										"sink": {
											"name": "SkipReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VisitLatitude",
											"type": "String"
										},
										"sink": {
											"name": "VisitLatitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VisitLongitude",
											"type": "String"
										},
										"sink": {
											"name": "VisitLongitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DeviationInMeter",
											"type": "String"
										},
										"sink": {
											"name": "DeviationInMeter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Deviated",
											"type": "String"
										},
										"sink": {
											"name": "Deviated",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReasonForDeviation",
											"type": "String"
										},
										"sink": {
											"name": "ReasonForDeviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OnRoute",
											"type": "String"
										},
										"sink": {
											"name": "OnRoute",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Remarks",
											"type": "String"
										},
										"sink": {
											"name": "Remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsBilled",
											"type": "String"
										},
										"sink": {
											"name": "IsBilled",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Lastmodifieddatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_WINIT_CCCR_Detail",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('CCRDetail_',pipeline().parameters.ProcessDate,'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_WINITCCCR_table_Detail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "WINIT Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartBasket-DF-To-TAS-Transfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT * FROM tmpRawSmartBasket",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawSmartBasketData",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Branch_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Branch_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Key",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Key",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Effective_Month",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Effective_Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product_Key",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Product_Key",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reco_Qty",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reco_Qty",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Product_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reco_Strategy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reco_Strategy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "New_RecoIdx",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "New_RecoIdx",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Target_Points",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Target_Points",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileSetId",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tmpRawSmartBasketData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spSmartBasketLoadData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Smart Basket"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartBasketProcess')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spDataLoadSmartBasketFile",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadSmartBasketFile]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@activity('spGetDFParameterDetail').output.firstRow.SBDRptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOLAPProcesStatusUpd",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOLAPProcesStatusUpd]",
							"storedProcedureParameters": {
								"JobId": {
									"value": "5",
									"type": "Int32"
								},
								"OLAP": {
									"value": "0",
									"type": "Int32"
								},
								"OLTP": {
									"value": "1",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spGetDFParameterDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetDFParameterDetail]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "spDataLoadSmartBasketFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flgcanproceed'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SmartBasket Process Status",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpDAProcessStatusGet]",
											"storedProcedureParameters": {
												"ProcessID": {
													"type": "Int32",
													"value": "1"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnection",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SmartBasket Process Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('SmartBasket Process Status').output.firstRow.flgStatus",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait 5 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set Complete",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "flgcanproceed",
													"value": {
														"value": "@bool(1)",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"flgcanproceed": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartBasket_Staging-To-DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SmartBasketStorageStagingDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Smart Basket Data",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "LastModifiedDatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"dataIntegrationUnits": 2,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_Code",
														"type": "String"
													},
													"sink": {
														"name": "Branch_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Customer_Key",
														"type": "String"
													},
													"sink": {
														"name": "Customer_Key",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Effective_Month",
														"type": "String"
													},
													"sink": {
														"name": "Effective_Month",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Product_Key",
														"type": "String"
													},
													"sink": {
														"name": "Product_Key",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Reco_Qty",
														"type": "String"
													},
													"sink": {
														"name": "Reco_Qty",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Product_Type",
														"type": "String"
													},
													"sink": {
														"name": "Product_Type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Reco_Strategy",
														"type": "String"
													},
													"sink": {
														"name": "Reco_Strategy",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "New_RecoIdx",
														"type": "String"
													},
													"sink": {
														"name": "New_RecoIdx",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Target_Points",
														"type": "String"
													},
													"sink": {
														"name": "Target_Points",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "FileName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LastModifiedDatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SmartBasketCSV_Staging",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SmartBasket_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-01-04T16:41:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Synapse Table to local csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT * FROM Prod_UOM_MSU",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapCSV_Staging_Appollo",
								"type": "DatasetReference",
								"parameters": {
									"filename": "produom.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Additional Process"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASFileProcessed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spGetAutoOrderFileList_Cloud1_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoOrderFileList]",
								"storedProcedureParameters": {
									"CloudId": {
										"type": "Int32",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TAS_tmpLeapDataLoadDPSR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cloud1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "spGetAutoOrderFileList_Cloud1_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('spGetAutoOrderFileList_Cloud1_Lookup').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Cloud1OrderFilesMetaData",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud1Default",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud1_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "LEAP/Cloud1/Upload"
											}
										},
										"fieldList": [
											"childItems",
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud1Default",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Cloud1OrderFilesMetaData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(startswith(item().FileSName,string(activity('Cloud1OrderFilesMetaData').output.childItems)))\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If File Exists Cloud1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('bCheckIFFileExists')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spMarkAutoDownloadOrderFileProcessed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spMarkAutoDownloadOrderFileProcessed]",
													"storedProcedureParameters": {
														"TrnsCycleId": {
															"value": {
																"value": "@item().TrnsCycleId",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "TASDatabase",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "spGetAutoOrderFileList_Cloud2_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoOrderFileList]",
								"storedProcedureParameters": {
									"CloudId": {
										"type": "Int32",
										"value": "2"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TAS_tmpLeapDataLoadDPSR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cloud2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "spGetAutoOrderFileList_Cloud2_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('spGetAutoOrderFileList_Cloud2_Lookup').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Cloud2OrderFilesMetaData",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud2Default",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud2_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "LEAP/Cloud2/Upload"
											}
										},
										"fieldList": [
											"childItems",
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud2Default",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Cloud2OrderFilesMetaData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(startswith(item().FileSName,string(activity('Cloud2OrderFilesMetaData').output.childItems)))\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If File Exists Cloud2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('bCheckIFFileExists_Cloud2')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spMarkAutoDownloadOrderFileProcessed_Cloud2",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spMarkAutoDownloadOrderFileProcessed]",
													"storedProcedureParameters": {
														"TrnsCycleId": {
															"value": {
																"value": "@item().TrnsCycleId",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "TASDatabase",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "spGetAutoOrderFileList_Cloud3_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoOrderFileList]",
								"storedProcedureParameters": {
									"CloudId": {
										"type": "Int32",
										"value": "3"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TAS_tmpLeapDataLoadDPSR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cloud3",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "spGetAutoOrderFileList_Cloud3_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('spGetAutoOrderFileList_Cloud3_Lookup').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Cloud3OrderFilesMetaData",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud3Default",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud3_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "LEAP/Cloud3/Upload"
											}
										},
										"fieldList": [
											"childItems",
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud3Default",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud3",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Cloud3OrderFilesMetaData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud3",
										"value": {
											"value": "@bool(startswith(item().FileSName,string(activity('Cloud3OrderFilesMetaData').output.childItems)))\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If File Exists Cloud3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('bCheckIFFileExists_Cloud3')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spMarkAutoDownloadOrderFileProcessed_Cloud3",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spMarkAutoDownloadOrderFileProcessed]",
													"storedProcedureParameters": {
														"TrnsCycleId": {
															"value": {
																"value": "@item().TrnsCycleId",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "TASDatabase",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"bCheckIFFileExists": {
						"type": "Boolean"
					},
					"bCheckIFFileExists_Cloud2": {
						"type": "Boolean"
					},
					"bCheckIFFileExists_Cloud3": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASOrderLog_Cloud1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cloud1FilesMetaData",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "S3TASOrderDataSet_Cloud1_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "LEAP/Cloud1/Log"
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AmazonS3ReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Cloud1FilesFilter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Cloud1FilesMetaData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud1FilesMetaData').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachCloud1FolderFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Cloud1FilesFilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud1FilesFilter').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LeapOrderLog_Cloud1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupspGetAutoTransferCycleIdForErrorOrder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "TrnsCycleId",
													"value": {
														"value": "@activity('LookupspGetAutoTransferCycleIdForErrorOrder').output.firstRow.TrnsCycleId",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_Code",
														"type": "String"
													},
													"sink": {
														"name": "Branch_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Number",
														"type": "String"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DSE_Code",
														"type": "String"
													},
													"sink": {
														"name": "DSE_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Retailer_Code",
														"type": "String"
													},
													"sink": {
														"name": "Retailer_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Route_Code",
														"type": "String"
													},
													"sink": {
														"name": "Route_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Date",
														"type": "String"
													},
													"sink": {
														"name": "Order_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													},
													"sink": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SUBBF_Name",
														"type": "String"
													},
													"sink": {
														"name": "SUBBF_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Qty",
														"type": "String"
													},
													"sink": {
														"name": "Order_Qty",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Name",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Code",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PO_Number",
														"type": "String"
													},
													"sink": {
														"name": "PO_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Error_Description",
														"type": "String"
													},
													"sink": {
														"name": "Error_Description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TrnsCycleId",
														"type": "String"
													},
													"sink": {
														"name": "TrnsCycleId",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud1_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "DeletelogFiles_Cloud1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud1_Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud1_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "LookupspGetAutoTransferCycleIdForErrorOrder",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoTransferCycleIdForErrorOrder]",
											"storedProcedureParameters": {
												"CloudId": {
													"type": "Byte",
													"value": "1"
												},
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LeapOrderLog_Cloud1_Staging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "TrnsCycleId",
													"value": {
														"value": "activity('LookupspGetAutoTransferCycleIdForErrorOrder').output.firstRow.TrnsCycleId",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud1_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "TASOrderLogStorageDS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "Cloud01"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:07Z"
			},
			"dependsOn": []
		}
	]
}