{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		},
		"AstixCDL SUBD Data Transfer_properties_CopyNCS_ASTIX_To_CDL_parameters_DataProcessDate": {
			"type": "string",
			"defaultValue": "@{convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy')}"
		},
		"HawkeyeDataImport_properties_HawkeyeDataImport_parameters_Container": {
			"type": "string",
			"defaultValue": "hawkeye-pwa"
		},
		"HawkeyeDataImport_properties_HawkeyeDataImport_parameters_ProcessedDataDate": {
			"type": "string",
			"defaultValue": "@{formatDateTime(utcNow(),'dd-MMM-yyyy')}"
		},
		"Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_SourceStore_Location": {
			"type": "string",
			"defaultValue": "cntleap"
		},
		"Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_SourceStore_Directory": {
			"type": "string",
			"defaultValue": "@{concat('/', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), '/', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MM'), '/', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '/')}"
		},
		"Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_DestinationStore_Location": {
			"type": "string",
			"defaultValue": "cntleap"
		},
		"Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_DestinationStore_Directory": {
			"type": "string",
			"defaultValue": "@{concat('/', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), '/', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MM'), '/', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '/')}"
		},
		"TAS-CDL-Transfer_properties_CopyTAS_ASTIX_To_CDL_parameters_DataProcessDate": {
			"type": "string",
			"defaultValue": "@{convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy')}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level4",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@concat(pipeline().parameters.SourceStore_Directory, item().name ,'/')\n\n",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSDataTransfer-ASTIX-TO-DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flgCanProcessStart'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WhenReadyToImport",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpDFGetDataLoadStatus]",
											"storedProcedureParameters": {
												"Date": {
													"type": "DateTime",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												},
												"flgDayorNight": {
													"type": "Byte",
													"value": {
														"value": "@pipeline().parameters.ProcessingType",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_NC_SUBD",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "flgCanProcessStart",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('WhenReadyToImport').output.firstRow.flgReadyLoad",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait 10 minutes",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 600
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyNCS_ASTIX_To_DF",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SpDeleteNCSTmpTable",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyNCS_ASTIX_To_DF",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {}
												}
											},
											{
												"name": "SpDeleteNCSTmpTable",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpDeleteNCSTmpTable]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "spExecuteSUBDDailySP",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyNCS_ASTIX_To_DF",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spExecuteSUBDDailySP]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "SpDFUpdateDataTransferStatus",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "spExecuteSUBDDailySP",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpDFUpdateDataTransferStatus]",
													"storedProcedureParameters": {
														"Date": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"flgDayorNight": {
															"value": {
																"value": "@pipeline().parameters.ProcessingType",
																"type": "Expression"
															},
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLServerNCSAstix",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "spNCSJobStatusupdate",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "SpDFUpdateDataTransferStatus",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spNCSJobStatusupdate]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "flgCanProcessStart",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "WhenReadyToImport",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgCanProcessStart",
										"value": {
											"value": "@bool(activity('WhenReadyToImport').output.firstRow.flgReadyLoad)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.03:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProcessingType": {
						"type": "int"
					}
				},
				"variables": {
					"flgCanProcessStart": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "NCS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSDataTransfer-ASTIX-TO-DF_05Aug2021')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyNCS_ASTIX_To_DF",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyNCS_ASTIX_To_DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteNCSTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyNCS_ASTIX_To_DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteNCSTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spExecuteSUBDDailySP",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SpDeleteNCSTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spExecuteSUBDDailySP]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "NCS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSDataTransfer-ASTIX-TO-DF_10Oct2022')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WhenReadyToImport",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpDFGetDataLoadStatus]",
								"storedProcedureParameters": {
									"Date": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									"flgDayorNight": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.ProcessingType",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_NC_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "WhenReadyToImport",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('WhenReadyToImport').output.firstRow.flgReadyLoad",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyNCS_ASTIX_To_DF",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteNCSTmpTable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyNCS_ASTIX_To_DF",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SpDeleteNCSTmpTable",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteNCSTmpTable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProcessingType": {
						"type": "int"
					}
				},
				"folder": {
					"name": "NCS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSDataTransfer-ASTIX-TO-DF_Historical')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyNCS_ASTIX_To_DF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteNCSTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyNCS_ASTIX_To_DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteNCSTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteNCSTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spExecuteSUBDDailySP",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyNCS_ASTIX_To_DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spExecuteSUBDDailySP]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "NCS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
										"storedProcedureParameters": {
											"dt": {
												"value": {
													"value": "@item().ProcessDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_CCCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_CCCR",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_CCCR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spTruncateCCCRData]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy_CCCR",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_Onefile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SingleFileCopy_Onefile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SingleFileCopy_Onefile",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Container": "cntleap",
								"Folder": {
									"value": "@concat('/cochinfeb20psr', '/')\n",
									"type": "Expression"
								},
								"ProcessDate": {
									"value": "@pipeline().parameters.ProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spLoadLeapDPSRIndividualProcess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SingleFileCopy_Onefile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
							"storedProcedureParameters": {
								"dt": {
									"value": {
										"value": "@pipeline().parameters.ProcessDate",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_RTDXFormat')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_RTDXFormat",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_RTDXFormat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('Site PSR Data/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'),formatDateTime(item().ProcessDate, 'MM'),formatDateTime(item().ProcessDate, 'yyyy'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy_RTDXFormat",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
										"storedProcedureParameters": {
											"dt": {
												"value": {
													"value": "@item().ProcessDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WinITCCCRDataLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT FORMAT(ProcessDate,'dd-MMM-yy') ProcessDate FROM tmpWinITCCCRDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_WINITCCCR",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_WINITCCCR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "spDataLoadRawLEAPTAS_CCCR_SubD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachDates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_SubD]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "WINIT Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AstixCDL SUBD Data Transfer')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyNCS_ASTIX_To_CDL",
							"type": "PipelineReference"
						},
						"parameters": {
							"DataProcessDate": "[parameters('AstixCDL SUBD Data Transfer_properties_CopyNCS_ASTIX_To_CDL_parameters_DataProcessDate')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-05-14T11:50:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AstixLeapCubeProcessing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "AstixLeapCubeProcessing",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-06-07T13:57:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								15,
								0,
								30,
								45
							],
							"hours": [
								8,
								9
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDL master Data Transfer')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Master-CDL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-05-31T06:41:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								10
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HawkeyeDataImport')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "HawkeyeDataImport",
							"type": "PipelineReference"
						},
						"parameters": {
							"Container": "[parameters('HawkeyeDataImport_properties_HawkeyeDataImport_parameters_Container')]",
							"ProcessedDataDate": "[parameters('HawkeyeDataImport_properties_HawkeyeDataImport_parameters_ProcessedDataDate')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T12:26:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								1
							],
							"hours": [
								15,
								16,
								17,
								18,
								19
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move ADLS CDL Staging')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MoveADLS-To-CDLStaging",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceStore_Location": "[parameters('Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_SourceStore_Location')]",
							"SourceStore_Directory": "[parameters('Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_SourceStore_Directory')]",
							"DestinationStore_Location": "[parameters('Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_DestinationStore_Location')]",
							"DestinationStore_Directory": "[parameters('Move ADLS CDL Staging_properties_MoveADLS-To-CDLStaging_parameters_DestinationStore_Directory')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-06-26T17:23:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5,
								9
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TAS-CDL-Transfer')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyTAS_ASTIX_To_CDL",
							"type": "PipelineReference"
						},
						"parameters": {
							"DataProcessDate": "[parameters('TAS-CDL-Transfer_properties_CopyTAS_ASTIX_To_CDL_parameters_DataProcessDate')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-06-13T05:26:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyLeap_Staging-To-DB_COHGAP_06Sep2025')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpTruncateCOHGAPTemptable",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpTruncateCOHGAPTemptable]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpLeapDataLoadCOHGAP",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Until1 cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Until1 Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Until1 Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpLeapDataLoadCOHGAP]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transfer COH from TAS to DF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpLeapDataLoadCOHGAP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tblCOHGap_ExternalUse",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "coh_date",
											"type": "String"
										},
										"sink": {
											"name": "coh_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_code",
											"type": "String"
										},
										"sink": {
											"name": "retailer_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_name",
											"type": "String"
										},
										"sink": {
											"name": "retailer_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_type_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_type_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sector_name",
											"type": "String"
										},
										"sink": {
											"name": "sector_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "seller_code",
											"type": "String"
										},
										"sink": {
											"name": "seller_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "seller_name",
											"type": "String"
										},
										"sink": {
											"name": "seller_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "coh_name",
											"type": "String"
										},
										"sink": {
											"name": "coh_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "target",
											"type": "String"
										},
										"sink": {
											"name": "target",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "achievement",
											"type": "String"
										},
										"sink": {
											"name": "achievement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "achievement_status",
											"type": "String"
										},
										"sink": {
											"name": "achievement_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "calculation_rule",
											"type": "String"
										},
										"sink": {
											"name": "calculation_rule",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_code",
											"type": "String"
										},
										"sink": {
											"name": "distributor_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_name",
											"type": "String"
										},
										"sink": {
											"name": "distributor_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetId",
											"type": "Int64"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TimeStampIns",
											"type": "DateTime"
										},
										"sink": {
											"name": "TimeStampIns",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "FBId",
											"type": "Int32"
										},
										"sink": {
											"name": "FBId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "StoreId",
											"type": "Int32"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DSENodeID",
											"type": "Int32"
										},
										"sink": {
											"name": "DSENodeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DSENodeType",
											"type": "Int32"
										},
										"sink": {
											"name": "DSENodeType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SlabTypeID",
											"type": "Int32"
										},
										"sink": {
											"name": "SlabTypeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SectorId",
											"type": "Int32"
										},
										"sink": {
											"name": "SectorId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "fb_type",
											"type": "String"
										},
										"sink": {
											"name": "fb_Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "comp_achievement_status",
											"type": "String"
										},
										"sink": {
											"name": "comp_achievement_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "full_achievement_date",
											"type": "String"
										},
										"sink": {
											"name": "full_achievement_date",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TASDestination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "tmpRawLEAPTAS_COHGAP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DW_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "tblCOHGap_ExternalUse"
								}
							}
						]
					},
					{
						"name": "COHPOINT_Cloud1",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHPOINTTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('COHPOINT_cloud0',variables('Cloud1'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@concat('COHPOINT_cloud0',variables('Cloud1'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dse_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dse_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sector",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sector",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_type_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_type_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coh_month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "coh_month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coh_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "coh_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ip_dp_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fb_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "norm_wise_target",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "norm_wise_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "target_retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "target_retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "qualified_retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qualified_retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distribution_target",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "distribution_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distribution_actual_percentage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "distribution_actual_percentage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Staging_GZIP_V2_Cloud1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TASDestination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_COHPOINT",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "COHPOINT_Cloud2",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHPOINTTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('COHPOINT_cloud0',variables('Cloud2'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@concat('COHPOINT_cloud0',variables('Cloud2'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dse_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dse_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sector",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sector",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_type_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_type_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coh_month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "coh_month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coh_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "coh_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ip_dp_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fb_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "norm_wise_target",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "norm_wise_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "target_retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "target_retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "qualified_retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qualified_retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distribution_target",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "distribution_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distribution_actual_percentage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "distribution_actual_percentage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Staging_GZIP_V2_Cloud2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TASDestination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_COHPOINT",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "COHPOINT_Cloud3",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHPOINTTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('COHPOINT_cloud0',variables('Cloud3'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@concat('COHPOINT_cloud0',variables('Cloud3'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dse_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dse_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sector",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sector",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_type_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_type_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coh_month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "coh_month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coh_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "coh_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ip_dp_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fb_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "norm_wise_target",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "norm_wise_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "target_retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "target_retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "qualified_retailer_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qualified_retailer_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distribution_target",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "distribution_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distribution_actual_percentage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "distribution_actual_percentage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Staging_GZIP_V2_Cloud3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TASDestination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_COHPOINT",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SpTruncateCOHPOINTTemptable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1_OneFile_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyS3-To-Staging_Cloud2_OneFile_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyS3-To-Staging_Cloud3_OneFile_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpTruncateCOHPOINTTemptable]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpGetCOHFilename_cloud1",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHGAPTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCOHFilename]",
								"storedProcedureParameters": {
									"Cloud": {
										"type": "Int32",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SpGetCOHFilename_cloud2",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHGAPTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCOHFilename]",
								"storedProcedureParameters": {
									"Cloud": {
										"type": "Int32",
										"value": "2"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SpGetCOHFilename_cloud3",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHGAPTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCOHFilename]",
								"storedProcedureParameters": {
									"Cloud": {
										"type": "Int32",
										"value": "3"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Until1 cloud1",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SpGetCOHFilename_cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flgFullProcessingPendingcloud1'))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SpGetTASFileLoadingStatus_Cloud1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetTASFileLoadingStatus]",
											"storedProcedureParameters": {
												"Filename": {
													"type": "String",
													"value": {
														"value": "@activity('SpGetCOHFilename_cloud1').output.firstRow.Filename",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_TASDdatabaseConnection_V2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SpGetTASFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('SpGetTASFileLoadingStatus_Cloud1').output.firstRow.flgFileImported,0)\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set flgFullProcessingPending_copy1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "flgFullProcessingPendingcloud1",
													"value": {
														"value": "@bool(1)",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COHGAP_Cloud1",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyS3-To-Staging_Cloud1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@concat('COHGAP_cloud0',variables('Cloud1'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@concat('COHGAP_cloud0',variables('Cloud1'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "coh_date",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_date",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "retailer_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "retailer_code",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "retailer_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "retailer_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel_type_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_type_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "sector",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "sector_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "seller_code",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "dse_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "seller_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "target",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "target",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "achievement",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "achievement",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "induvid_achievement_status",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "achievement_status",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_type",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "calculation_rule",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_detail",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_detail",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "withsale",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "withsale",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "nosale",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "nosale",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "distributor_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "branch_location",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "distributor_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime",
																	"physicalType": "smalldatetime"
																}
															},
															{
																"source": {
																	"name": "ip_dp_type",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "fb_type",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "comp_achievement_status",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "comp_achievement_status",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "full_achievement_date",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "full_achievement_date",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_GZIP_V2_Cloud1",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_TASDestination_table",
														"type": "DatasetReference",
														"parameters": {
															"tablename": {
																"value": "tmpRawLEAPTAS_COHGAP",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "CopyS3-To-Staging_Cloud1",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyS3-To-Staging_Cloud1_OneFile_V2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"windowStart": {
															"value": "@pipeline().parameters.windowStart",
															"type": "Expression"
														},
														"windowEnd": {
															"value": "@pipeline().parameters.windowEnd",
															"type": "Expression"
														},
														"filename": {
															"value": "@activity('SpGetCOHFilename_cloud1').output.firstRow.Filename",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [
													{
														"activity": "COHGAP_Cloud1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Until1 Cloud2",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SpGetCOHFilename_cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flgFullProcessingPendingcloud2'))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SpGetTASFileLoadingStatus_Cloud2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetTASFileLoadingStatus]",
											"storedProcedureParameters": {
												"Filename": {
													"type": "String",
													"value": {
														"value": "@activity('SpGetCOHFilename_cloud2').output.firstRow.Filename",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_TASDdatabaseConnection_V2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1_cloud2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SpGetTASFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('SpGetTASFileLoadingStatus_Cloud2').output.firstRow.flgFileImported,0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set flgFullProcessingPending_cloud2_copy1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "flgFullProcessingPendingcloud2",
													"value": {
														"value": "@bool(1)",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyS3-To-Staging_Cloud2",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyS3-To-Staging_Cloud2_OneFile_V2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"windowStart": {
															"value": "@pipeline().parameters.windowStart",
															"type": "Expression"
														},
														"windowEnd": {
															"value": "@pipeline().parameters.windowEnd",
															"type": "Expression"
														},
														"filename": {
															"value": "@activity('SpGetCOHFilename_cloud2').output.firstRow.Filename",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "COHGAP_Cloud2",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyS3-To-Staging_Cloud2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@concat('COHGAP_cloud0',variables('Cloud2'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@concat('COHGAP_cloud0',variables('Cloud2'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "coh_date",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_date",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "retailer_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "retailer_code",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "retailer_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "retailer_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel_type_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_type_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "sector",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "sector_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "seller_code",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "dse_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "seller_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "target",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "target",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "achievement",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "achievement",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "induvid_achievement_status",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "achievement_status",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_type",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "calculation_rule",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_detail",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_detail",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "withsale",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "withsale",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "nosale",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "nosale",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "distributor_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "branch_location",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "distributor_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime",
																	"physicalType": "smalldatetime"
																}
															},
															{
																"source": {
																	"name": "ip_dp_type",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "fb_type",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "comp_achievement_status",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "comp_achievement_status",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "full_achievement_date",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "full_achievement_date",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_GZIP_V2_Cloud2",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_TASDestination_table",
														"type": "DatasetReference",
														"parameters": {
															"tablename": {
																"value": "tmpRawLEAPTAS_COHGAP",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Wait1_cloud2",
												"type": "Wait",
												"dependsOn": [
													{
														"activity": "COHGAP_Cloud2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Until1 Cloud3",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SpGetCOHFilename_cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flgFullProcessingPendingcloud3'))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SpGetTASFileLoadingStatus_Cloud3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetTASFileLoadingStatus]",
											"storedProcedureParameters": {
												"Filename": {
													"type": "String",
													"value": {
														"value": "@activity('SpGetCOHFilename_cloud3').output.firstRow.Filename",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_TASDdatabaseConnection_V2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1_cloud3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SpGetTASFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('SpGetTASFileLoadingStatus_Cloud3').output.firstRow.flgFileImported,0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set flgFullProcessingPending_cloud3_copy1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "flgFullProcessingPendingcloud3",
													"value": {
														"value": "@bool(1)",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COHGAP_Cloud3",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyS3-To-Staging_Cloud3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@concat('COHGAP_cloud0',variables('Cloud3'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@concat('COHGAP_cloud0',variables('Cloud3'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv.gz')",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "coh_date",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_date",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "retailer_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "retailer_code",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "retailer_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "retailer_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "channel_type_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "channel_type_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "sector",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "sector_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "seller_code",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "dse_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "seller_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_name",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "target",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "target",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "achievement",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "achievement",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "induvid_achievement_status",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "achievement_status",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_type",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "calculation_rule",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "coh_detail",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "coh_detail",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "withsale",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "withsale",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "nosale",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "nosale",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "distributor_code",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "branch_location",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "distributor_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime",
																	"physicalType": "smalldatetime"
																}
															},
															{
																"source": {
																	"name": "ip_dp_type",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "fb_type",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "comp_achievement_status",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "comp_achievement_status",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "full_achievement_date",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "full_achievement_date",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_GZIP_V2_Cloud3",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_TASDestination_table",
														"type": "DatasetReference",
														"parameters": {
															"tablename": {
																"value": "tmpRawLEAPTAS_COHGAP",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "CopyS3-To-Staging_Cloud3",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyS3-To-Staging_Cloud3_Onefile_V2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"windowStart": {
															"value": "@pipeline().parameters.windowStart",
															"type": "Expression"
														},
														"windowEnd": {
															"value": "@pipeline().parameters.windowEnd",
															"type": "Expression"
														},
														"filename": {
															"value": "@activity('SpGetCOHFilename_cloud3').output.firstRow.Filename",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Wait1_cloud3",
												"type": "Wait",
												"dependsOn": [
													{
														"activity": "COHGAP_Cloud3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Transfer COH from TAS to DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1_OneFile_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1_OneFile_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat('COHPOINT_cloud01_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'yyyy'),formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'dd'), '.csv.gz')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2_OneFile_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2_OneFile_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat('COHPOINT_cloud02_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'yyyy'),formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'dd'), '.csv.gz')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_OneFile_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_Onefile_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat('COHPOINT_cloud03_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'yyyy'),formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time','dd-MMM-yyyy'), 'dd'), '.csv.gz')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"variables": {
					"Cloud1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Cloud2": {
						"type": "String",
						"defaultValue": "2"
					},
					"Cloud3": {
						"type": "String",
						"defaultValue": "3"
					},
					"flgFullProcessingPendingcloud1": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgFullProcessingPendingcloud2": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgFullProcessingPendingcloud3": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCCRDataProcessing_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SpCheckCCCRMorningProcessingDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckCCCRMorningProcessingDone]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "When Morning CCCR Processing Done",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpCheckCCCRMorningProcessingDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('SpCheckCCCRMorningProcessingDone').output.firstRow.flgMorningProcessingDone\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyS3-To-Staging-V2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyS3-To-Staging-Onefile-V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@pipeline().parameters.windowStart",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@pipeline().parameters.windowEnd",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "CopyStaging-To-DB-CCCR-V2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "spUpdateCCRLoadingStatus_Begin",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyStaging-To-DB-CCCR-V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CycleID": {
												"value": "@activity('SpCycleStart').output.firstRow.CycleID",
												"type": "Expression"
											},
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "spProcessDayZeroDataProcessing",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyStaging-To-DB-CCCR-V2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spProcessDayZeroDataProcessing]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase_Check",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "CopyLeapStaging-To-ADLS-AllCloudFiles",
									"type": "ExecutePipeline",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "spRptPopulateDataForTASAbsenteeismDashboard",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Directory": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "CopyLeapStaging-To-CCCRStorage",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "spUpdateCCRLoadingStatus_End",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-CCRStorage",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "spUpdateCCRLoadingStatus_Begin",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyS3-To-Staging-V2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spUpdateCCRLoadingStatus]",
										"storedProcedureParameters": {
											"flgStatus": {
												"value": "0",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase_Check",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spUpdateCCRLoadingStatus_End",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "spProcessDayZeroDataProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spUpdateCCRLoadingStatus]",
										"storedProcedureParameters": {
											"flgStatus": {
												"value": "1",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase_Check",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spRptTAS_AssignmentCompliance",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyLeapStaging-To-CCCRStorage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spRptTAS_AssignmentCompliance_MTD]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spRptPopulateDataForTASAbsenteeismDashboard",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "spRptTAS_AssignmentCompliance",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spRptPopulateDataForTASAbsenteeismDashboard]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "When Morning CCCR Processing Done",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(greaterOrEquals(formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'HH:mm:ss'),'18:00:00'),\nlessOrEquals(formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'HH:mm:ss'),'22:00:00'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DW_Resume_Scale_V2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DW_Resume_Scale_V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ScaleVal": "DW100c",
											"flgcalled": 1
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'HH:mm:ss'),'18:00:00')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DW_Pause",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Master-CDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DW_Pause",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Master-CDL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Master-CDL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CFRDataProcessing_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-CFR-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-CFR-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataProcessDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FocusBrandLoading-LEAP-TO-DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FileTransferfromS3toAzure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteFocusbrandTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDXS3-To-Staging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FocusbrandLoadingtoDB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FileTransferfromS3toAzure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDX_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spDataLoadFocusBrand",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FocusbrandLoadingtoDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadFocusBrand]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDeleteFocusbrandTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteFocusbrandTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}