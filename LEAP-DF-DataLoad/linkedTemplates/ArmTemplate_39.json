{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		},
		"LeapFileLoading_At6_properties_LeapDataMovement_WithoutProcessing_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"LeapFileLoading_At6_properties_LeapDataMovement_WithoutProcessing_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"LeapFileTransfer_properties_CopyS3-To-Staging-V2_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"LeapFileTransfer_properties_CopyS3-To-Staging-V2_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"LeapStagingFileCleanup_properties_CopyLeapStaging-To-ADLS-AllCloudFiles_parameters_Directory": {
			"type": "string",
			"defaultValue": "cntleap"
		},
		"LeapStagingFileCleanup_properties_CopyLeapStaging-To-ADLS-AllCloudFiles_parameters_Folder": {
			"type": "string",
			"defaultValue": "@{concat('/', formatDateTime(trigger().scheduledTime, 'yyyy'), '/', formatDateTime(trigger().scheduledTime, 'MM'), '/', formatDateTime(trigger().scheduledTime, 'dd'), '/')}"
		},
		"NCSSUBDDataLoadingFromAstixServer_Day_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType": {
			"type": "int",
			"defaultValue": 1
		},
		"NCSSUBDDataLoadingFromAstixServer_Night_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType": {
			"type": "int",
			"defaultValue": 2
		},
		"S3LEAPFileTransfer_properties_CopyS3-To-Staging_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"S3LEAPFileTransfer_properties_CopyS3-To-Staging_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataLoadingCloud3_25Apr2024')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_1_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_2_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_3_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_4_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_5_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_5_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_6_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_6_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_7_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_7_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_DistributorLevel_9",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_DistributorLevel_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_CCCR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CFR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CFR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_part2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_8_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_part3",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_CCCR_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_3_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_2_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_6_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_part3_copy1",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_1_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_4_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_5_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_7_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_CFR_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CycleID": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "int"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataLoadingCloud3_SBD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_1_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_2_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_3_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_4_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_5_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_5_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_6_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_6_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_7_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_7_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_DistributorLevel_9",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_DistributorLevel_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_8_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_CCCR_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CFR_V2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CFR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_SBD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_part2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_8_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_part3",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_CCCR_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_3_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_2_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_6_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_part3_copy1",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_1_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_4_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_5_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_7_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_CFR_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyLeap_Staging-To-DB_13_V2_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_13_V2_Cloud3",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3_part3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_13_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SetID": 13,
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								},
								"Step": {
									"value": "@pipeline().parameters.Step",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3_SBD",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_SBD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CycleID": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "int"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SBD Processing"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataLoading_CCCR_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": "1"
							}
						}
					},
					{
						"name": "LeapCCCRDataProcessing_Cloud1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_Cloud1]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": "2"
							}
						}
					},
					{
						"name": "LeapCCCRDataProcessing_Cloud2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_Cloud2]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": "3"
							}
						}
					},
					{
						"name": "LeapCCCRDataProcessing_Cloud3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_Cloud3]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_Loop_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_1_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CenterPoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_1_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_3_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_4_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_5_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_4_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_5_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_6_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_5_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_6_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_7_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_6_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_7_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_DistributorLevel_9",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_8_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_DistributorLevel_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_7_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_DistributorLevel_9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CenterPoint",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_V2_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_HistoricalLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IfDataforProcess",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetDataForProccesing]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_COS_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDayProcessing",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "IfDataforProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('IfDataforProcess').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DailyDataProcessing",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "StartProcess",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LeapDataMovement_WithoutProcessing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@item().windowstartdate",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@item().windowenddate",
												"type": "Expression"
											},
											"DataProcessDate": {
												"value": "@item().DataDate",
												"type": "Expression"
											},
											"Container": {
												"value": "@item().container",
												"type": "Expression"
											},
											"Directory": {
												"value": "@item().directory",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "StartProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpUpdateDataForProccesing]",
										"storedProcedureParameters": {
											"flgStep": {
												"value": "1",
												"type": "Byte"
											},
											"ID": {
												"value": {
													"value": "@item().ID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "EndProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DailyDataProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpUpdateDataForProccesing]",
										"storedProcedureParameters": {
											"flgStep": {
												"value": "2",
												"type": "Byte"
											},
											"ID": {
												"value": {
													"value": "@item().ID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy S3 to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": {
									"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
									"type": "Expression"
								},
								"Folder": "cntleap"
							}
						}
					},
					{
						"name": "Delete Staging Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy S3 to Staging",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level3",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@concat(pipeline().parameters.SourceStore_Directory,'/', item().name ,'/')\n\n",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PCode_Maximus_Job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpMonthStartProcessingCheck",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpMonthStartProcessingCheck]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpMonthStartProcessingCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpMonthStartProcessingCheck').output.firstRow.flgProcessOK,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Maximus Rurban Split",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Maximus Rurban Split",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Dminus1Date": {
												"value": "@pipeline().parameters.DMinus1Date",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DMinus1Date": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestPipeline_06Jun')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeapStaging-To-ADLS-AllCloudFiles",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "cntleap",
								"Folder": {
									"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WINIT Daily Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyStaging-To-DB-WINITDRCP-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyStaging-To-DB-WINITStoreMaster-V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-WINITDRCP-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-WINITStoreMaster-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-WINITStoreMaster-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-CFR-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyStaging-To-DB-WINITCCR-V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-CFR-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-WINITCCR-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyStaging-To-DB-WINITDRCP-V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-WINITCCR-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-WINITPSR-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyStaging-To-DB-CFR-V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-WINITPSR-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-WINITSamrtBasket-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyStaging-To-DB-WINITPSR-V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-WINITSamrtBasket-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SmartBasket Process Status Update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyStaging-To-DB-WINITSamrtBasket-V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDAProcessStatusUpdate]",
							"storedProcedureParameters": {
								"flgStatus": {
									"value": "2",
									"type": "Byte"
								},
								"ProcessID": {
									"value": "1",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "WINIT Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WINIT Daily Processing_13May2023')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyStaging-To-DB-WINITStoreMaster-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-WINITStoreMaster-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "WINIT Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WINITStoreMasterDataProcessing_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-WINITStoreMaster-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-WINITStoreMaster-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ERDataLoading')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LoadER-To-DB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-10T14:56:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								17
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapFileLoading_At6')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeapDataMovement_WithoutProcessing",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('LeapFileLoading_At6_properties_LeapDataMovement_WithoutProcessing_parameters_windowStart')]",
							"windowEnd": "[parameters('LeapFileLoading_At6_properties_LeapDataMovement_WithoutProcessing_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-06-07T18:27:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapFileTransfer')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyS3-To-Staging-V2",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('LeapFileTransfer_properties_CopyS3-To-Staging-V2_parameters_windowStart')]",
							"windowEnd": "[parameters('LeapFileTransfer_properties_CopyS3-To-Staging-V2_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-05-31T05:31:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0,
								15
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapStagingFileCleanup')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
							"type": "PipelineReference"
						},
						"parameters": {
							"Directory": "[parameters('LeapStagingFileCleanup_properties_CopyLeapStaging-To-ADLS-AllCloudFiles_parameters_Directory')]",
							"Folder": "[parameters('LeapStagingFileCleanup_properties_CopyLeapStaging-To-ADLS-AllCloudFiles_parameters_Folder')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T06:06:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSSUBDDataLoadingFromAstixServer_Day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "NCSDataTransfer-ASTIX-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {
							"ProcessingType": "[parameters('NCSSUBDDataLoadingFromAstixServer_Day_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T14:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								14
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSSUBDDataLoadingFromAstixServer_Night')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "NCSDataTransfer-ASTIX-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {
							"ProcessingType": "[parameters('NCSSUBDDataLoadingFromAstixServer_Night_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T04:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S3LEAPFileTransfer')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyS3-To-Staging",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('S3LEAPFileTransfer_properties_CopyS3-To-Staging_parameters_windowStart')]",
							"windowEnd": "[parameters('S3LEAPFileTransfer_properties_CopyS3-To-Staging_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-02-18T09:30:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		}
	]
}