{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LeapData_Factandcubeprocessing_V2_backup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SprefreshMaximusphase",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spRefreshMaximusPhase]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Cube Dimension Processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SprefreshMaximusphase",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 14,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "spPopulateFactCOSData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactCOSData_PCode]",
							"storedProcedureParameters": {
								"RptMonthYear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactSalesData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactSalesData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactTargetData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactTargetData_PCode]",
							"storedProcedureParameters": {
								"RptMonthYear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactCFRData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactCFRData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactInventoryData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactInventoryData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactARData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactARData_PCode]",
							"storedProcedureParameters": {
								"RptMonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactOrderData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cube Dimension Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactOrderData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "COS_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactCOSData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 6,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Sales_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactSalesData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 1,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Target_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactTargetData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 11,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CFR_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactCFRData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 5,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Inventory_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactInventoryData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 8,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "AR_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactARData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 4,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Order_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactOrderData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 12,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "spPopulateFactCoverageData_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spPopulateFactSalesData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactCoverageData_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coverage_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spUpdateFactCoverageForTASCalls_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 2,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "spUpdateActualInvDetail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spPopulateFactCoverageData_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateActualInvDetail]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spUpdateFactCoverageForTASCalls_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spUpdateActualInvDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateFactCoverageForTASCalls_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateFactStoreDistribution_PCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spUpdateFactCoverageForTASCalls_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactStoreDistribution_PCode]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@pipeline().parameters.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StoreDistribution_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spPopulateFactStoreDistribution_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 13,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CoverageStoreLvl_CubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spUpdateFactCoverageForTASCalls_PCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"flgcalled": 1,
								"TypeID": 3,
								"processdate": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"RptMonthYear": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadER-To-DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetERFileDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Checkfiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileDetails').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileList",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ERStorageSourceDataset_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"folder": " ",
												"directory": "cntelasticrun"
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpERFileImportLog_Start",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "150",
															"activities": [
																{
																	"name": "ERStoremaster",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_period",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "time_perd_start_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "trade_channel_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "in_coverage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "golden",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "store_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "storeaddress_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "storeaddress_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "store_address_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "zip_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "generic_text_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "generic_text_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "generic_text_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "generic_text_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "generic_text_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "generic_num_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "generic_num_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "generic_num_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "generic_num_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "generic_num_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "extra_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "extra_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "extra_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 33
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 34
																					},
																					"sink": {
																						"name": "extra_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 35
																					},
																					"sink": {
																						"name": "extra_field_6",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 36
																					},
																					"sink": {
																						"name": "extra_field_7",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 37
																					},
																					"sink": {
																						"name": "extra_field_8",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 38
																					},
																					"sink": {
																						"name": "extra_field_9",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 39
																					},
																					"sink": {
																						"name": "extra_field_10",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 40
																					},
																					"sink": {
																						"name": "extra_field_11",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 41
																					},
																					"sink": {
																						"name": "extra_field_12",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 42
																					},
																					"sink": {
																						"name": "extra_field_13",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 43
																					},
																					"sink": {
																						"name": "extra_field_14",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 44
																					},
																					"sink": {
																						"name": "extra_field_15",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 45
																					},
																					"sink": {
																						"name": "extra_field_16",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 46
																					},
																					"sink": {
																						"name": "extra_field_17",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 47
																					},
																					"sink": {
																						"name": "extra_field_18",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 48
																					},
																					"sink": {
																						"name": "extra_field_19",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																	"type": "SqlServerStoredProcedure",
																	"dependsOn": [
																		{
																			"activity": "ERStoremaster",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_RTRM_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "StoreMaster",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_StoreMaster",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "151",
															"activities": [
																{
																	"name": "ERSales",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_perd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "day_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "derived_isis_cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "prod_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "geo_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "org_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "proft_ctr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "scndr_ship_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "trade_chanl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "iso_crncy_code_char",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "mm_hybrid_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "func_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "captl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "measr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "brand",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "genrc_dmnsn_1_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "genrc_dmnsn_3_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "fact_qlty_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "niv_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "niv_total",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "attr_val_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "su",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "giv",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																	"type": "SqlServerStoredProcedure",
																	"dependsOn": [
																		{
																			"activity": "ERSales",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_Sales_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile_copy1",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "Sales",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_Sales",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile_copy1",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														}
													]
												}
											},
											{
												"name": "SpERFileImportLog_Start",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "1",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "SpERFileImportLog_End",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "IfFileFound",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "2",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadER-To-DB_08Feb2024')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetERFileDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Checkfiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileDetails').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileList",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ERStorageSourceDataset_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"folder": " ",
												"directory": "cntelasticrun"
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpERFileImportLog_Start",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "150",
															"activities": [
																{
																	"name": "ERStoremaster",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_period",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "time_perd_start_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "trade_channel_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "in_coverage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "golden",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "store_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "storeaddress_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "storeaddress_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "store_address_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "zip_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "generic_text_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "generic_text_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "generic_text_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "generic_text_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "generic_text_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "generic_num_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "generic_num_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "generic_num_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "generic_num_field_4",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "generic_num_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "extra_field_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "extra_field_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "extra_field_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 33
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 34
																					},
																					"sink": {
																						"name": "extra_field_5",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 35
																					},
																					"sink": {
																						"name": "extra_field_6",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 36
																					},
																					"sink": {
																						"name": "extra_field_7",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 37
																					},
																					"sink": {
																						"name": "extra_field_8",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 38
																					},
																					"sink": {
																						"name": "extra_field_9",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 39
																					},
																					"sink": {
																						"name": "extra_field_10",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 40
																					},
																					"sink": {
																						"name": "extra_field_11",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 41
																					},
																					"sink": {
																						"name": "extra_field_12",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 42
																					},
																					"sink": {
																						"name": "extra_field_13",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 43
																					},
																					"sink": {
																						"name": "extra_field_14",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 44
																					},
																					"sink": {
																						"name": "extra_field_15",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 45
																					},
																					"sink": {
																						"name": "extra_field_16",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 46
																					},
																					"sink": {
																						"name": "extra_field_17",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 47
																					},
																					"sink": {
																						"name": "extra_field_18",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 48
																					},
																					"sink": {
																						"name": "extra_field_19",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																	"type": "SqlServerStoredProcedure",
																	"state": "Inactive",
																	"onInactiveMarkAs": "Succeeded",
																	"dependsOn": [
																		{
																			"activity": "ERStoremaster",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_RTRM_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile",
																	"type": "ExecutePipeline",
																	"state": "Inactive",
																	"onInactiveMarkAs": "Succeeded",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_RTRM_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "StoreMaster",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_StoreMaster",
																	"type": "ExecutePipeline",
																	"state": "Inactive",
																	"onInactiveMarkAs": "Succeeded",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "151",
															"activities": [
																{
																	"name": "ERSales",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE [@{item().temptablename}]",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 1
																					},
																					"sink": {
																						"name": "srce_sys_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 2
																					},
																					"sink": {
																						"name": "fact_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 3
																					},
																					"sink": {
																						"name": "sbmsn_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 4
																					},
																					"sink": {
																						"name": "due_perd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 5
																					},
																					"sink": {
																						"name": "time_perd_type_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 6
																					},
																					"sink": {
																						"name": "day_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 7
																					},
																					"sink": {
																						"name": "derived_isis_cust_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 8
																					},
																					"sink": {
																						"name": "prod_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 9
																					},
																					"sink": {
																						"name": "geo_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 10
																					},
																					"sink": {
																						"name": "org_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 11
																					},
																					"sink": {
																						"name": "subd",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 12
																					},
																					"sink": {
																						"name": "proft_ctr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 13
																					},
																					"sink": {
																						"name": "scndr_ship_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 14
																					},
																					"sink": {
																						"name": "trade_chanl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 15
																					},
																					"sink": {
																						"name": "iso_crncy_code_char",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 16
																					},
																					"sink": {
																						"name": "mm_hybrid_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 17
																					},
																					"sink": {
																						"name": "func_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 18
																					},
																					"sink": {
																						"name": "captl_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 19
																					},
																					"sink": {
																						"name": "measr_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 20
																					},
																					"sink": {
																						"name": "brand",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 21
																					},
																					"sink": {
																						"name": "genrc_dmnsn_1_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 22
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 23
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 24
																					},
																					"sink": {
																						"name": "genrc_dmnsn_2_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 25
																					},
																					"sink": {
																						"name": "genrc_dmnsn_3_type_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 26
																					},
																					"sink": {
																						"name": "store",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 27
																					},
																					"sink": {
																						"name": "fact_qlty_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 28
																					},
																					"sink": {
																						"name": "niv_flag",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 29
																					},
																					"sink": {
																						"name": "niv_total",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 30
																					},
																					"sink": {
																						"name": "attr_val_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 31
																					},
																					"sink": {
																						"name": "su",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"type": "String",
																						"ordinal": 32
																					},
																					"sink": {
																						"name": "giv",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "CSVDataSource_File_withoutGzip",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntelasticrun",
																				"Directory": " ",
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																	"type": "SqlServerStoredProcedure",
																	"dependsOn": [
																		{
																			"activity": "ERSales",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "0.12:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"storedProcedureName": "[[dbo].[spDataLoadtmpRawLEAPTAS_Sales_ER]",
																		"storedProcedureParameters": {
																			"FileName": {
																				"value": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"type": "String"
																			}
																		}
																	},
																	"linkedServiceName": {
																		"referenceName": "DataFoundationDB",
																		"type": "LinkedServiceReference"
																	}
																},
																{
																	"name": "CopyERStaging-To-ADLS-OneFile_copy1",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "spDataLoadtmpRawLEAPTAS_Sales_ER",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "CopyERStaging-To-ADLS-OneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"Directory": "cntelasticrun",
																			"Folder": "Sales",
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "DeleteERStagingOneFile_Sales",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "CopyERStaging-To-ADLS-OneFile_copy1",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "DeleteERStagingOneFile",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"FileName": {
																				"value": "@activity('GetFileList').output.itemName",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														}
													]
												}
											},
											{
												"name": "SpERFileImportLog_Start",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "1",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "SpERFileImportLog_End",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "IfFileFound",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[SpERFileImportLog]",
													"storedProcedureParameters": {
														"DataDate": {
															"value": {
																"value": "@item().DataDate",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"FileID": {
															"value": {
																"value": "@item().FileID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"flgStartStop": {
															"value": "2",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Dev_DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFile-Staging-To-DB_DRCP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LoadFile-ADLS-To-DB",
				"activities": [
					{
						"name": "GetFileList_Cloud1",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud1",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList_Cloud1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),bool(startswith(item().name,'DRCP_cloud01_')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud1",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DRCP_Could1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud01_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud1",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name\n",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															},
															{
																"name": "FileSetID",
																"value": "0"
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														},
														"disableMetricsCollection": false
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "FileSetID",
																	"type": "String"
																},
																"sink": {
																	"name": "FileSetId",
																	"type": "Int64"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_V2_Cloud1",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_Cloud1_Temp",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "EXEC spDataLoadRawLeapTAS_DRCP_Cloud1",
												"type": "SqlServerStoredProcedure",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "DRCP_Cloud1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spDataLoadRawLeapTAS_DRCP_Cloud1]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetFileList_Cloud2",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud2",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList_Cloud2').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),bool(startswith(item().name,'DRCP_cloud02_')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud2",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud2').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DRCP_Could2",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud02_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spDataLoadRawLeapTAS_DRCP_Cloud2",
												"type": "SqlServerStoredProcedure",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "DRCP_Cloud2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spDataLoadRawLeapTAS_DRCP_Cloud2]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DRCP_Cloud2",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															},
															{
																"name": "FileSetID",
																"value": "0"
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														},
														"disableMetricsCollection": false
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "FileSetID",
																	"type": "String"
																},
																"sink": {
																	"name": "FileSetId",
																	"type": "Int64"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_V2_Cloud2",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_Cloud2_Temp",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetFileList_Cloud3",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud3",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList_Cloud3').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),bool(startswith(item().name,'DRCP_cloud03_')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud3",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud3').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DRCP_Could3",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud03_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spDataLoadRawLeapTAS_DRCP_Cloud3",
												"type": "SqlServerStoredProcedure",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "DRCP_Cloud3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spDataLoadRawLeapTAS_DRCP_Cloud3]"
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DRCP_Cloud3",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															},
															{
																"name": "FileSetID",
																"value": "0"
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														},
														"disableMetricsCollection": false
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "FileSetID",
																	"type": "String"
																},
																"sink": {
																	"name": "FileSetId",
																	"type": "Int64"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "LeapCSV_Staging_V2_Cloud3",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_Cloud3_Temp",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MorningProcessCompleteCheck_Container')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpMonthStartProcessingCheck",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpMonthStartProcessingCheck]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpMonthStartProcessingCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpMonthStartProcessingCheck').output.firstRow.flgProcessOK,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "MorningProcessCompleteCheck",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MorningProcessCompleteCheck",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"flgCanProcessStart": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level4",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@concat(pipeline().parameters.SourceStore_Directory, item().name ,'/')\n\n",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PCode_Maximus_Job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpMonthStartProcessingCheck",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpMonthStartProcessingCheck]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpMonthStartProcessingCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpMonthStartProcessingCheck').output.firstRow.flgProcessOK,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Maximus Rurban Split",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Maximus Rurban Split",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DMinus1Date": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
										"storedProcedureParameters": {
											"dt": {
												"value": {
													"value": "@item().ProcessDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_CCCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_CCCR",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_CCCR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spTruncateCCCRData]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy_CCCR",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_Onefile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SingleFileCopy_Onefile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SingleFileCopy_Onefile",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Container": "cntleap",
								"Folder": {
									"value": "@concat('/cochinfeb20psr', '/')\n",
									"type": "Expression"
								},
								"ProcessDate": {
									"value": "@pipeline().parameters.ProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spLoadLeapDPSRIndividualProcess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SingleFileCopy_Onefile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
							"storedProcedureParameters": {
								"dt": {
									"value": {
										"value": "@pipeline().parameters.ProcessDate",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_RTDXFormat')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_RTDXFormat",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_RTDXFormat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('Site PSR Data/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'),formatDateTime(item().ProcessDate, 'MM'),formatDateTime(item().ProcessDate, 'yyyy'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy_RTDXFormat",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
										"storedProcedureParameters": {
											"dt": {
												"value": {
													"value": "@item().ProcessDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASDataUpdate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RetailerFlagUpdate",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RetailerFlagUpdate",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TeleCallerListForDay",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RetailerFlagUpdate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TeleCallerListForDay",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASOrderLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TASOrderLog_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TASOrderLog_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASOrderLog_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TASOrderLog_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASOrderLog_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WinITCCCRDataLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT FORMAT(ProcessDate,'dd-MMM-yy') ProcessDate FROM tmpWinITCCCRDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_WINITCCCR",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_WINITCCCR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "spDataLoadRawLEAPTAS_CCCR_SubD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachDates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_SubD]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "WINIT Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DW_Scale_AfterProcessing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DW_Scale_AfterProcessing",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-12-09T13:27:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0,
								10,
								20,
								30,
								40,
								50
							],
							"hours": [
								10,
								11,
								12
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AfterDF-To-TasTransfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spGetDFParameterDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetDFParameterDetail]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "spRunForFiveStar-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spRunForFiveStar]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spCalculateLSSSchemeAgainstActData-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spRunForFiveStar-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCalculateLSSSchemeAgainstActData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spCalculateLuckDrawStore-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spTAS_UpdateTeleCallingActGPPoints-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCalculateLuckDrawStore]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FiveStar Data Transfer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spCalculateLSSSchemeAgainstActData-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TeleCallingId",
											"type": "Int32"
										},
										"sink": {
											"name": "TelecallingID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GPPoints",
											"type": "Byte"
										},
										"sink": {
											"name": "GPPOints",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "ParameterId",
											"type": "Byte"
										},
										"sink": {
											"name": "Parameterid",
											"type": "Byte"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TAS_tmpTeleCallingFiveStarGPPoints",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tmpTAS_FiveStarGPPoints",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spTAS_UpdateTeleCallingActGPPoints-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FiveStar Data Transfer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_UpdateTeleCallingActGPPoints]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW_Resume_Scale DW200_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spTAS_UpdateTeleCallingActGPPoints-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Resume_Scale_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ScaleVal": "DW200c",
								"flgcalled": 0
							}
						}
					},
					{
						"name": "DCC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DCC_Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DCC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DCC_Processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Resume_Scale DW200_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DCC_Processing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FinalCubeProcessing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Resume_Scale DW200_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FinalCubeProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DMinusOneDate": {
									"value": "@activity('spGetDFParameterDetail').output.firstRow.DMinusOneDate",
									"type": "Expression"
								},
								"flgcalled": 1
							}
						}
					},
					{
						"name": "PCode_Maximus_Job",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DWScaleafterProcessing_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PCode_Maximus_Job",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DMinus1Date": {
									"value": "@activity('spGetDFParameterDetail').output.firstRow.DMinusOneDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DWScaleafterProcessing_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FinalCubeProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DCC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DWScaleafterProcessing_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MorningProcessCompleteCheck",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DCC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MorningProcessCompleteCheck",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PCode_Maximus_Job')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCCRDataProcessing_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SpCheckCCCRMorningProcessingDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckCCCRMorningProcessingDone]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "When Morning CCCR Processing Done",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpCheckCCCRMorningProcessingDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('SpCheckCCCRMorningProcessingDone').output.firstRow.flgMorningProcessingDone\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyS3-To-Staging-V2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyS3-To-Staging-Onefile-V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@pipeline().parameters.windowStart",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@pipeline().parameters.windowEnd",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "CopyStaging-To-DB-CCCR-V2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "CopyS3-To-Staging-V2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyStaging-To-DB-CCCR-V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CycleID": {
												"value": "@activity('SpCycleStart').output.firstRow.CycleID",
												"type": "Expression"
											},
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "spProcessDayZeroDataProcessing",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyStaging-To-DB-CCCR-V2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spProcessDayZeroDataProcessing]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase_Check",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "CopyLeapStaging-To-ADLS-AllCloudFiles",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "CopyLeapStaging-To-CCCRStorage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Directory": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "CopyLeapStaging-To-CCCRStorage",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "spProcessDayZeroDataProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-CCRStorage",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "When Morning CCCR Processing Done",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(greaterOrEquals(formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'HH:mm:ss'),'18:00:00'),\nlessOrEquals(formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'HH:mm:ss'),'22:00:00'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DW_Resume_Scale_V2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DW_Resume_Scale_V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ScaleVal": "DW100c",
											"flgcalled": 1
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'HH:mm:ss'),'22:00:00')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DW_Pause",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DW_Pause",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CFRDataProcessing_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-CFR-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-CFR-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataProcessDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinalCubeProcessing_Container')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpMonthStartProcessingCheck",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpMonthStartProcessingCheck]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpMonthStartProcessingCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpMonthStartProcessingCheck').output.firstRow.flgProcessOK,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "FinalCubeProcessing",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FinalCubeProcessing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DMinusOneDate": {
												"value": "@pipeline().parameters.DMinusOneDate",
												"type": "Expression"
											},
											"flgcalled": {
												"value": "@pipeline().parameters.flgcalled",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DMinusOneDate": {
						"type": "string"
					},
					"flgcalled": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"flgCanProcessStart": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgTimeOK": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinalDFProcessing_02Feb2024')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spGetDFParameterDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetDFParameterDetail]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PCode_Maximus_Job",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PCode_Maximus_Job",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DMinus1Date": {
									"value": "@activity('spGetDFParameterDetail').output.firstRow.DMinusOneDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"flgCOHTimeOK": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PCode_Maximus_Job')]"
			]
		}
	]
}