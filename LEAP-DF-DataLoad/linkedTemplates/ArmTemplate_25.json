{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadLeapADLS-To-DB_Salesstatus_Seq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileDetails-Cloud1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileDetails_Single]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Checkfiles-Cloud1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileDetails-Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileDetails-Cloud1').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileList-Cloud1",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SpFileImportLog_Start",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
													"type": "Expression"
												},
												"directory": "cntleap",
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists-Cloud1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList-Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList-Cloud1').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound-Cloud1",
												"type": "Switch",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "79",
															"activities": [
																{
																	"name": "SalesStatus_Cloud1",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList-Cloud1').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobFSReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList-Cloud1').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE @{item().temptablename}",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "so_no",
																						"type": "String"
																					},
																					"sink": {
																						"name": "so_no",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "so_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "so_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "expected_delivery_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "expected_delivery_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_no",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_no",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_amount",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_amount",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_status",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "ADLSCSVDataSource_File",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntleap",
																				"Directory": {
																					"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
																					"type": "Expression"
																				},
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "SpFileImportLog_Start",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpFileImportLog]",
										"storedProcedureParameters": {
											"CloudInstance": {
												"value": "1",
												"type": "Byte"
											},
											"DataDate": {
												"value": {
													"value": "@item().DataDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"FileID": {
												"value": {
													"value": "@item().FileID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"flgStartStop": {
												"value": "1",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpFileImportLog_End",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "If File Exists-Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpFileImportLog]",
										"storedProcedureParameters": {
											"CloudInstance": {
												"value": "1",
												"type": "Byte"
											},
											"DataDate": {
												"value": {
													"value": "@item().DataDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"FileID": {
												"value": {
													"value": "@item().FileID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"flgStartStop": {
												"value": "2",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spDataLoad_OrderSalesStatus_Cloud1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SpFileImportLog_End",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spDataLoad_OrderSalesStatus_Cloud1]"
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "GetFileDetails-Cloud2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileDetails_Single]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": "2"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Checkfiles-Cloud2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileDetails-Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileDetails-Cloud2').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileList-Cloud2",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SpFileImportLog_Cloud2_Start",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
													"type": "Expression"
												},
												"directory": "cntleap",
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists-Cloud2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList-Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList-Cloud2').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound-Cloud2",
												"type": "Switch",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "80",
															"activities": [
																{
																	"name": "SalesStatus_Cloud2",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList-Cloud2').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobFSReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList-Cloud2').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE @{item().temptablename}",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "so_no",
																						"type": "String"
																					},
																					"sink": {
																						"name": "so_no",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "so_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "so_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "expected_delivery_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "expected_delivery_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_no",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_no",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_amount",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_amount",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_status",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "ADLSCSVDataSource_File",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntleap",
																				"Directory": {
																					"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
																					"type": "Expression"
																				},
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "SpFileImportLog_Cloud2_Start",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpFileImportLog]",
										"storedProcedureParameters": {
											"CloudInstance": {
												"value": "2",
												"type": "Byte"
											},
											"DataDate": {
												"value": {
													"value": "@item().DataDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"FileID": {
												"value": {
													"value": "@item().FileID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"flgStartStop": {
												"value": "1",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpFileImportLog_Cloud2_End",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "If File Exists-Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpFileImportLog]",
										"storedProcedureParameters": {
											"CloudInstance": {
												"value": "2",
												"type": "Byte"
											},
											"DataDate": {
												"value": {
													"value": "@Item().DataDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"FileID": {
												"value": {
													"value": "@item().FileID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"flgStartStop": {
												"value": "2",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spDataLoad_OrderSalesStatus_Cloud2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SpFileImportLog_Cloud2_End",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spDataLoad_OrderSalesStatus_Cloud2]"
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "GetFileDetails-Cloud3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileDetails_Single]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": "3"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Checkfiles-Cloud3",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileDetails-Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileDetails-Cloud3').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileList-Cloud3",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SpFileImportLog_Cloud3_Start",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
													"type": "Expression"
												},
												"directory": "cntleap",
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists-Cloud3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList-Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList-Cloud3').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound-Cloud3",
												"type": "Switch",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "81",
															"activities": [
																{
																	"name": "SalesStatus_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList-Cloud3').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "0",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobFSReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList-Cloud3').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE @{item().temptablename}",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "so_no",
																						"type": "String"
																					},
																					"sink": {
																						"name": "so_no",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "so_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "so_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "expected_delivery_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "expected_delivery_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_no",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_no",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_amount",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_amount",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_status",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetId",
																						"type": "Int64"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "ADLSCSVDataSource_File",
																			"type": "DatasetReference",
																			"parameters": {
																				"Container": "cntleap",
																				"Directory": {
																					"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
																					"type": "Expression"
																				},
																				"Filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "SpFileImportLog_Cloud3_Start",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpFileImportLog]",
										"storedProcedureParameters": {
											"CloudInstance": {
												"value": "3",
												"type": "Byte"
											},
											"DataDate": {
												"value": {
													"value": "@item().DataDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"FileID": {
												"value": {
													"value": "@item().FileID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"flgStartStop": {
												"value": "1",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpFileImportLog_Cloud3_End",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "If File Exists-Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpFileImportLog]",
										"storedProcedureParameters": {
											"CloudInstance": {
												"value": "3",
												"type": "Byte"
											},
											"DataDate": {
												"value": {
													"value": "@item().DataDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"FileID": {
												"value": {
													"value": "@item().FileID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"flgStartStop": {
												"value": "2",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spDataLoad_OrderSalesStatus_Cloud3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SpFileImportLog_Cloud3_End",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spDataLoad_OrderSalesStatus_Cloud3]"
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSUMaster-CDL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT * FROM tblPrdMSUFactor",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSVDataSource_File_withoutGzip_V2",
								"type": "DatasetReference",
								"parameters": {
									"Container": "leapcdlinput",
									"Folder": "master",
									"Filename": "tblPrdMSUFactor.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Additional Process"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterDataForAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy SalesHierarchy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "Select DISTINCT DbrNodeID,DbrNodeType,DbrCode,DbrName,BrnNodeID,BrnNOdeType,BranchCode,SubDNodeID,SubDNodeType,SubDCode\nFROM vwSalesHierarchyUptoSUBD WHERE DbrName <> 'Unknown'\nUNION\nSelect DISTINCT DbrNodeID,DbrNodeType,DbrCode,DbrName,BrnNodeID,BrnNOdeType,BranchCode,NULL,NULL,NULL\nFROM vwSalesHierarchy WHERE DbrName <> 'Unknown'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE SalesHierarchyUptoSUBD",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DbrNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DbrNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DbrNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DbrNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DbrCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DbrCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DbrName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DbrName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrnNOdeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNOdeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubDNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubDNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubDNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubDNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DF_NC_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_API_DBRList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Maximus Rurban Split')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "tbltmpRurbanSplit",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MX-spPopulateStoreListWithTownType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tbltmpRurbanSplit",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "PolybaseLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StoreCode",
											"type": "String"
										},
										"sink": {
											"name": "StoreCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "flgTownType",
											"type": "Byte"
										},
										"sink": {
											"name": "flgTownType",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "flgActive",
											"type": "Byte"
										},
										"sink": {
											"name": "flgActive",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "CV_VillageId",
											"type": "Int32"
										},
										"sink": {
											"name": "CV_VillageId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CV_VillageCode",
											"type": "String"
										},
										"sink": {
											"name": "CV_VillageCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_VillageName",
											"type": "String"
										},
										"sink": {
											"name": "CV_VillageName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_VillageLvl",
											"type": "String"
										},
										"sink": {
											"name": "CV_VillageLvl",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_Population",
											"type": "Int32"
										},
										"sink": {
											"name": "CV_Population",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CV_SubDistrict",
											"type": "String"
										},
										"sink": {
											"name": "CV_SubDistrict",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_District",
											"type": "String"
										},
										"sink": {
											"name": "CV_District",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CV_State",
											"type": "String"
										},
										"sink": {
											"name": "CV_State",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PowerVillage",
											"type": "String"
										},
										"sink": {
											"name": "PowerVillage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ABCD_Classification",
											"type": "String"
										},
										"sink": {
											"name": "ABCD_Classification",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Maximus_tbltmpRurbanSplit",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tbltmpRurbanSplit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MX-spPopulateStoreListWithTownType",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MX-spImportForNewStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateStoreListWithTownType]"
						},
						"linkedServiceName": {
							"referenceName": "MaximusDBLink",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MX-spImportForNewStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait 30 min",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW_Resume_Scale_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportForNewStores]"
						},
						"linkedServiceName": {
							"referenceName": "MaximusDBLink",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF-spUpdateRurbanSplitInStoreMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "tbltmpRurbanSplit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateRurbanSplitInStoreMaster]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Scale 800 DTU",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S7",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Wait 30 min",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Scale 800 DTU",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1800
						}
					},
					{
						"name": "Scale 10 DTU Step1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MX-spImportForNewStores",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Step2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MX-spPopulateStoreListWithTownType",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Step3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tbltmpRurbanSplit",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Step4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DF-spUpdateRurbanSplitInStoreMaster",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "Scale 10 DTU Success",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DF-spUpdateRurbanSplitInStoreMaster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale_Maximus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S0",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "DW_Resume_Scale_V2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Resume_Scale_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ScaleVal": "DW100c",
								"flgcalled": 1
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MergeADLSFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cloud01",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "db_code",
											"type": "String"
										},
										"sink": {
											"name": "db_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "db_name",
											"type": "String"
										},
										"sink": {
											"name": "db_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_date",
											"type": "String"
										},
										"sink": {
											"name": "picklist_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_delivery_date",
											"type": "String"
										},
										"sink": {
											"name": "picklist_delivery_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_no",
											"type": "String"
										},
										"sink": {
											"name": "picklist_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_code",
											"type": "String"
										},
										"sink": {
											"name": "retailer_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_name",
											"type": "String"
										},
										"sink": {
											"name": "retailer_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contact_number_1",
											"type": "String"
										},
										"sink": {
											"name": "contact_number_1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contact_number_2",
											"type": "String"
										},
										"sink": {
											"name": "contact_number_2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub_channel_name",
											"type": "String"
										},
										"sink": {
											"name": "sub_channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_number",
											"type": "String"
										},
										"sink": {
											"name": "invoice_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "String"
										},
										"sink": {
											"name": "order_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_date",
											"type": "String"
										},
										"sink": {
											"name": "invoice_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actual_delivery_attempt_date",
											"type": "String"
										},
										"sink": {
											"name": "actual_delivery_attempt_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ar_at_day_start",
											"type": "String"
										},
										"sink": {
											"name": "ar_at_day_start",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_value",
											"type": "String"
										},
										"sink": {
											"name": "invoice_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivery_status",
											"type": "String"
										},
										"sink": {
											"name": "delivery_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivered_time",
											"type": "String"
										},
										"sink": {
											"name": "delivered_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_partial_no_delivery",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_partial_no_delivery",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_on_hold",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_on_hold",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivered_value",
											"type": "String"
										},
										"sink": {
											"name": "delivered_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "collection_amount",
											"type": "String"
										},
										"sink": {
											"name": "collection_amount",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "advance_collection",
											"type": "String"
										},
										"sink": {
											"name": "advance_collection",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "visit_latitude",
											"type": "String"
										},
										"sink": {
											"name": "visit_latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "visit_longitude",
											"type": "String"
										},
										"sink": {
											"name": "visit_longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "deviation_in_meter",
											"type": "String"
										},
										"sink": {
											"name": "deviation_in_meter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "deviation",
											"type": "String"
										},
										"sink": {
											"name": "deviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_deviation",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_deviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "remarks",
											"type": "String"
										},
										"sink": {
											"name": "remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_predicted_time",
											"type": "String"
										},
										"sink": {
											"name": "store_predicted_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "in_store_time",
											"type": "String"
										},
										"sink": {
											"name": "in_store_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_start_time",
											"type": "String"
										},
										"sink": {
											"name": "store_start_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_end_time",
											"type": "String"
										},
										"sink": {
											"name": "store_end_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "battery_perc",
											"type": "String"
										},
										"sink": {
											"name": "battery_perc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distance_travelled",
											"type": "String"
										},
										"sink": {
											"name": "Distance_travelled",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLSCSVDataSource_File",
								"type": "DatasetReference",
								"parameters": {
									"Container": "cntleap",
									"Directory": "2023/09/01",
									"Filename": "DBGPS_cloud01_2023Sep01.csv.gz"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DBGPS_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cloud02",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "db_code",
											"type": "String"
										},
										"sink": {
											"name": "db_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "db_name",
											"type": "String"
										},
										"sink": {
											"name": "db_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_date",
											"type": "String"
										},
										"sink": {
											"name": "picklist_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_delivery_date",
											"type": "String"
										},
										"sink": {
											"name": "picklist_delivery_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_no",
											"type": "String"
										},
										"sink": {
											"name": "picklist_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_code",
											"type": "String"
										},
										"sink": {
											"name": "retailer_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_name",
											"type": "String"
										},
										"sink": {
											"name": "retailer_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contact_number_1",
											"type": "String"
										},
										"sink": {
											"name": "contact_number_1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contact_number_2",
											"type": "String"
										},
										"sink": {
											"name": "contact_number_2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub_channel_name",
											"type": "String"
										},
										"sink": {
											"name": "sub_channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_number",
											"type": "String"
										},
										"sink": {
											"name": "invoice_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "String"
										},
										"sink": {
											"name": "order_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_date",
											"type": "String"
										},
										"sink": {
											"name": "invoice_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actual_delivery_attempt_date",
											"type": "String"
										},
										"sink": {
											"name": "actual_delivery_attempt_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ar_at_day_start",
											"type": "String"
										},
										"sink": {
											"name": "ar_at_day_start",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_value",
											"type": "String"
										},
										"sink": {
											"name": "invoice_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivery_status",
											"type": "String"
										},
										"sink": {
											"name": "delivery_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivered_time",
											"type": "String"
										},
										"sink": {
											"name": "delivered_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_partial_no_delivery",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_partial_no_delivery",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_on_hold",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_on_hold",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivered_value",
											"type": "String"
										},
										"sink": {
											"name": "delivered_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "collection_amount",
											"type": "String"
										},
										"sink": {
											"name": "collection_amount",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "advance_collection",
											"type": "String"
										},
										"sink": {
											"name": "advance_collection",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "visit_latitude",
											"type": "String"
										},
										"sink": {
											"name": "visit_latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "visit_longitude",
											"type": "String"
										},
										"sink": {
											"name": "visit_longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "deviation_in_meter",
											"type": "String"
										},
										"sink": {
											"name": "deviation_in_meter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "deviation",
											"type": "String"
										},
										"sink": {
											"name": "deviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_deviation",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_deviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "remarks",
											"type": "String"
										},
										"sink": {
											"name": "remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_predicted_time",
											"type": "String"
										},
										"sink": {
											"name": "store_predicted_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "in_store_time",
											"type": "String"
										},
										"sink": {
											"name": "in_store_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_start_time",
											"type": "String"
										},
										"sink": {
											"name": "store_start_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_end_time",
											"type": "String"
										},
										"sink": {
											"name": "store_end_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "battery_perc",
											"type": "String"
										},
										"sink": {
											"name": "battery_perc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distance_travelled",
											"type": "String"
										},
										"sink": {
											"name": "Distance_travelled",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLSCSVDataSource_File",
								"type": "DatasetReference",
								"parameters": {
									"Container": "cntleap",
									"Directory": "2023/09/01",
									"Filename": "DBGPS_cloud02_2023Sep01.csv.gz"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DBGPS_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cloud03",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "db_code",
											"type": "String"
										},
										"sink": {
											"name": "db_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "db_name",
											"type": "String"
										},
										"sink": {
											"name": "db_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_date",
											"type": "String"
										},
										"sink": {
											"name": "picklist_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_delivery_date",
											"type": "String"
										},
										"sink": {
											"name": "picklist_delivery_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "picklist_no",
											"type": "String"
										},
										"sink": {
											"name": "picklist_no",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_code",
											"type": "String"
										},
										"sink": {
											"name": "retailer_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_name",
											"type": "String"
										},
										"sink": {
											"name": "retailer_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contact_number_1",
											"type": "String"
										},
										"sink": {
											"name": "contact_number_1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contact_number_2",
											"type": "String"
										},
										"sink": {
											"name": "contact_number_2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub_channel_name",
											"type": "String"
										},
										"sink": {
											"name": "sub_channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_number",
											"type": "String"
										},
										"sink": {
											"name": "invoice_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "String"
										},
										"sink": {
											"name": "order_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_date",
											"type": "String"
										},
										"sink": {
											"name": "invoice_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actual_delivery_attempt_date",
											"type": "String"
										},
										"sink": {
											"name": "actual_delivery_attempt_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ar_at_day_start",
											"type": "String"
										},
										"sink": {
											"name": "ar_at_day_start",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invoice_value",
											"type": "String"
										},
										"sink": {
											"name": "invoice_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivery_status",
											"type": "String"
										},
										"sink": {
											"name": "delivery_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivered_time",
											"type": "String"
										},
										"sink": {
											"name": "delivered_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_partial_no_delivery",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_partial_no_delivery",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_on_hold",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_on_hold",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "delivered_value",
											"type": "String"
										},
										"sink": {
											"name": "delivered_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "collection_amount",
											"type": "String"
										},
										"sink": {
											"name": "collection_amount",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "advance_collection",
											"type": "String"
										},
										"sink": {
											"name": "advance_collection",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "visit_latitude",
											"type": "String"
										},
										"sink": {
											"name": "visit_latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "visit_longitude",
											"type": "String"
										},
										"sink": {
											"name": "visit_longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "deviation_in_meter",
											"type": "String"
										},
										"sink": {
											"name": "deviation_in_meter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "deviation",
											"type": "String"
										},
										"sink": {
											"name": "deviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "reason_for_deviation",
											"type": "String"
										},
										"sink": {
											"name": "reason_for_deviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "remarks",
											"type": "String"
										},
										"sink": {
											"name": "remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_predicted_time",
											"type": "String"
										},
										"sink": {
											"name": "store_predicted_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "in_store_time",
											"type": "String"
										},
										"sink": {
											"name": "in_store_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_start_time",
											"type": "String"
										},
										"sink": {
											"name": "store_start_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "store_end_time",
											"type": "String"
										},
										"sink": {
											"name": "store_end_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "battery_perc",
											"type": "String"
										},
										"sink": {
											"name": "battery_perc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distance_travelled",
											"type": "String"
										},
										"sink": {
											"name": "Distance_travelled",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLSCSVDataSource_File",
								"type": "DatasetReference",
								"parameters": {
									"Container": "cntleap",
									"Directory": "2023/09/01",
									"Filename": "DBGPS_cloud03_2023Sep01.csv.gz"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DBGPS_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoCSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cloud01",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Cloud02",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Cloud03",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "db_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "db_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "db_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "db_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "picklist_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "picklist_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "picklist_delivery_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "picklist_delivery_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "picklist_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "picklist_no",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "retailer_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "retailer_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "retailer_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "retailer_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "contact_number_1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "contact_number_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "contact_number_2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "contact_number_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sub_channel_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sub_channel_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "invoice_number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invoice_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "invoice_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invoice_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "actual_delivery_attempt_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_delivery_attempt_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ar_at_day_start",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ar_at_day_start",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "invoice_value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invoice_value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "delivery_status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "delivery_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "delivered_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "delivered_time",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "reason_for_partial_no_delivery",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reason_for_partial_no_delivery",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "reason_for_on_hold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reason_for_on_hold",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "delivered_value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "delivered_value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "collection_amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "collection_amount",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "advance_collection",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "advance_collection",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visit_latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "visit_latitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visit_longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "visit_longitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "deviation_in_meter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "deviation_in_meter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "deviation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "deviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "reason_for_deviation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reason_for_deviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "remarks",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "remarks",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "store_predicted_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "store_predicted_time",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "in_store_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "in_store_time",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "store_start_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "store_start_time",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "store_end_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "store_end_time",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "battery_perc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "battery_perc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "distance_travelled",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Distance_travelled",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DBGPS_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLSCSVDataSource_File",
								"type": "DatasetReference",
								"parameters": {
									"Container": "leap",
									"Directory": "temp",
									"Filename": "DBGPS_01Sep2023.csv.gz"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MorningProcessCompleteCheck')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flgCanProcessStart'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(int(activity('Lookup1').output.firstRow.PGCubeProcessStatus),1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait 5 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "spDataHub_LoadFlag",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "flgCanProcessStart",
													"value": {
														"value": "@bool(1)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "spDataHub_LoadFlag",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spDataHub_LoadFlag]",
													"storedProcedureParameters": {
														"CurrentDate": {
															"value": {
																"value": "@addminutes(utcnow(),330)",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"flgProcessCOmplete": {
															"value": "1",
															"type": "Byte"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "DataFoundationDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetPGCubeProcessStatusFinal]",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnection",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"flgCanProcessStart": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination1",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteAFile",
									"description": "Delete a file from the source store",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-Staging_V2_ZipIssue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud1_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud1').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud1",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud1",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles_Cloud1",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud01'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud2",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud02'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud2_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud2').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud2",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud2",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles_Cloud3",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud03'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud3_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud3').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud3",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud3",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFilename",
						"description": "Iterate each file ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "INVVAL*",
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_dfdatafoundation",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveFiles_Staging-to-Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDataSource_Folder2",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"preserve": [
											"Attributes"
										],
										"validateDataConsistency": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "BinaryDataSource_File2",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination2",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteAFile",
									"description": "Delete a file from the source store",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BinaryDataSource_File2",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewTASProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpMonthStartProcessingCheck",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpMonthStartProcessingCheck]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpMonthStartProcessingCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpMonthStartProcessingCheck').output.firstRow.flgProcessOK,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "spRunForFiveStar-TAS",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spRunForFiveStar]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase_Check",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spCalculateLSSSchemeAgainstActData-TAS",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "spRunForFiveStar-TAS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spCalculateLSSSchemeAgainstActData]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase_Check",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "FiveStar Data Transfer",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "spCalculateLSSSchemeAgainstActData-TAS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowCopyCommand": true,
											"copyCommandSettings": {}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "TeleCallingId",
														"type": "Int32"
													},
													"sink": {
														"name": "TelecallingID",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "GPPoints",
														"type": "Byte"
													},
													"sink": {
														"name": "GPPOints",
														"type": "Byte"
													}
												},
												{
													"source": {
														"name": "ParameterId",
														"type": "Byte"
													},
													"sink": {
														"name": "Parameterid",
														"type": "Byte"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DS_TAS_tmpTeleCallingFiveStarGPPoints",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_tmpTAS_FiveStarGPPoints",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "spTAS_UpdateTeleCallingActGPPoints-DF",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "FiveStar Data Transfer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spTAS_UpdateTeleCallingActGPPoints]"
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Only_COHPOINT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COHPOINT_Cloud1",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHPOINTTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('COHPOINT_cloud0',variables('Cloud1'),'_', formatDateTime(pipeline().TriggerTime, 'yyyy'), formatDateTime(pipeline().TriggerTime, 'MMM'), formatDateTime(pipeline().TriggerTime, 'dd'), '.csv')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@concat('COHPOINT_cloud0',variables('Cloud1'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_name",
											"type": "String"
										},
										"sink": {
											"name": "dse_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sector",
											"type": "String"
										},
										"sink": {
											"name": "sector",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_type_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_type_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "coh_month",
											"type": "String"
										},
										"sink": {
											"name": "coh_month",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "coh_name",
											"type": "String"
										},
										"sink": {
											"name": "coh_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fb_type",
											"type": "String"
										},
										"sink": {
											"name": "fb_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "norm_wise_target",
											"type": "String"
										},
										"sink": {
											"name": "norm_wise_target",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "target_retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "target_retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qualified_retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "qualified_retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distribution_target",
											"type": "String"
										},
										"sink": {
											"name": "distribution_target",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distribution_actual_percentage",
											"type": "String"
										},
										"sink": {
											"name": "distribution_actual_percentage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Staging_V2_Cloud1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TASDestination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_COHPOINT",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "COHPOINT_Cloud2",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHPOINTTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('COHPOINT_cloud0',variables('Cloud2'),'_', formatDateTime(pipeline().TriggerTime, 'yyyy'), formatDateTime(pipeline().TriggerTime, 'MMM'), formatDateTime(pipeline().TriggerTime, 'dd'), '.csv')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@concat('COHPOINT_cloud0',variables('Cloud2'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_name",
											"type": "String"
										},
										"sink": {
											"name": "dse_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sector",
											"type": "String"
										},
										"sink": {
											"name": "sector",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_type_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_type_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "coh_month",
											"type": "String"
										},
										"sink": {
											"name": "coh_month",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "coh_name",
											"type": "String"
										},
										"sink": {
											"name": "coh_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fb_type",
											"type": "String"
										},
										"sink": {
											"name": "fb_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "norm_wise_target",
											"type": "String"
										},
										"sink": {
											"name": "norm_wise_target",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "target_retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "target_retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qualified_retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "qualified_retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distribution_target",
											"type": "String"
										},
										"sink": {
											"name": "distribution_target",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distribution_actual_percentage",
											"type": "String"
										},
										"sink": {
											"name": "distribution_actual_percentage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Staging_V2_Cloud2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TASDestination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_COHPOINT",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "COHPOINT_Cloud3",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SpTruncateCOHPOINTTemptable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('COHPOINT_cloud0',variables('Cloud3'),'_', formatDateTime(pipeline().TriggerTime, 'yyyy'), formatDateTime(pipeline().TriggerTime, 'MMM'), formatDateTime(pipeline().TriggerTime, 'dd'), '.csv')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@concat('COHPOINT_cloud0',variables('Cloud3'),'_', formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'MMM'), formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'dd'), '.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_location",
											"type": "String"
										},
										"sink": {
											"name": "branch_location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_code",
											"type": "String"
										},
										"sink": {
											"name": "dse_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dse_name",
											"type": "String"
										},
										"sink": {
											"name": "dse_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sector",
											"type": "String"
										},
										"sink": {
											"name": "sector",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_type_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_type_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "coh_month",
											"type": "String"
										},
										"sink": {
											"name": "coh_month",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "coh_name",
											"type": "String"
										},
										"sink": {
											"name": "coh_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fb_type",
											"type": "String"
										},
										"sink": {
											"name": "fb_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "norm_wise_target",
											"type": "String"
										},
										"sink": {
											"name": "norm_wise_target",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "target_retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "target_retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "qualified_retailer_count",
											"type": "String"
										},
										"sink": {
											"name": "qualified_retailer_count",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distribution_target",
											"type": "String"
										},
										"sink": {
											"name": "distribution_target",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distribution_actual_percentage",
											"type": "String"
										},
										"sink": {
											"name": "distribution_actual_percentage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Staging_V2_Cloud3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TASDestination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_COHPOINT",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SpTruncateCOHPOINTTemptable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpTruncateCOHPOINTTemptable]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"variables": {
					"Cloud1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Cloud2": {
						"type": "String",
						"defaultValue": "2"
					},
					"Cloud3": {
						"type": "String",
						"defaultValue": "3"
					},
					"flgFullProcessingPendingcloud1": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgFullProcessingPendingcloud2": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgFullProcessingPendingcloud3": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PnGExternalDataCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 1000000,
									"fileNamePrefix": "DBR",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tmpDataForrakesh_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tmpDataForrakesh_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PnGExternalData"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Productmasterprocessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spDataLoadRawProductMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawProductMaster]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "producthierarchycopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spDataLoadRawProductMaster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tmpTransferProductHierarchy",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LEHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LEHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LENodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LENodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LENodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LENodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BrandHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrandNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrandNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BFCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BFCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBFCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SKUHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "DLP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "DLP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "SAPUPC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SAPUPC",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ProdHierarchy_DF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProdHierarchy_TAS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spTransferProductMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "producthierarchycopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTransferProductMaster]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-24T12:52:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurdDataFileGeneration_Temp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy PURD Cloud1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataDatetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud01' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud1\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud1','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DataDatetime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DeleteDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TimeToday",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcnow(),'UTC','India Standard Time'),1,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataDeleteDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcnow(),'UTC','India Standard Time'),8,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy PURD Cloud2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PURD Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud02' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud2\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud2','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy PURD Cloud3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PURD Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud03' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud3\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\nORDER BY 2\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud3','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TimeToday": {
						"type": "String"
					},
					"DataDeleteDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PurdDataFileGeneration_Temp_Anyday')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy PURD Cloud1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataDatetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud01' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud1\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud1','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DataDatetime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DeleteDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TimeToday",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone('20-Apr-2024','UTC','India Standard Time'),1,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteDate",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataDeleteDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcnow(),'UTC','India Standard Time'),8,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy PURD Cloud2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PURD Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud02' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud2\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud2','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy PURD Cloud3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PURD Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select 'Cloud03' AS Cloud,branch_Code, grn_date,COUNT(*) NoOfRecords\nFROM tmpRawLeapTAS_PURD_cloud3\nWHERE branch_Code NOT LIKE 'T%'\nGROUP BY branch_Code, grn_date\nORDER BY 2\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cloud",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "branch_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "grn_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfRecords",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfRecords",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ProdMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LeapAPIFileDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "purddatacontainer",
									"FolderPath": {
										"value": "@{concat(formatDateTime(variables('TimeToday'), 'yyyy'), '/', formatDateTime(variables('TimeToday'), 'MM'), '/', formatDateTime(variables('TimeToday'), 'dd'))}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{concat('PURD_Cloud3','.csv')}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TimeToday": {
						"type": "String"
					},
					"DataDeleteDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBDINITStoreTransfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy tblTAS_INITSBDStoreWiseGaps",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblTAS_INITSBDStoreWiseGaps",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblINITSBDStoreWiseGaps_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBDINITStoreTransfer_Copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy tblTAS_INITSBDStoreWiseGaps",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblTAS_INITSBDStoreWiseGaps",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblINITSBDStoreWiseGaps_New",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBDMTRFileimport')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBDMTR_Cloud1",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMTR_cloud01_2024Mar31.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMTR_cloud01_2024Mar31.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawLEAPTAS_SBDMTR_Cloud1",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "group_code",
											"type": "String"
										},
										"sink": {
											"name": "group_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_code",
											"type": "String"
										},
										"sink": {
											"name": "sbf_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_name",
											"type": "String"
										},
										"sink": {
											"name": "sbf_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "moq",
											"type": "String"
										},
										"sink": {
											"name": "moq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_from",
											"type": "String"
										},
										"sink": {
											"name": "effective_from",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_to",
											"type": "String"
										},
										"sink": {
											"name": "effective_to",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_base",
											"type": "String"
										},
										"sink": {
											"name": "is_base",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMTR_Cloud1",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMTR_Cloud3",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMTR_cloud03_2024Mar31.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMTR_cloud03_2024Mar31.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawLEAPTAS_SBDMTR_Cloud3",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "group_code",
											"type": "String"
										},
										"sink": {
											"name": "group_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_code",
											"type": "String"
										},
										"sink": {
											"name": "sbf_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_name",
											"type": "String"
										},
										"sink": {
											"name": "sbf_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "moq",
											"type": "String"
										},
										"sink": {
											"name": "moq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_from",
											"type": "String"
										},
										"sink": {
											"name": "effective_from",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_to",
											"type": "String"
										},
										"sink": {
											"name": "effective_to",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_base",
											"type": "String"
										},
										"sink": {
											"name": "is_base",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMTR_Cloud3",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMTR_Cloud2",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMTR_cloud02_2024Mar31.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMTR_cloud02_2024Mar31.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawLEAPTAS_SBDMTR_Cloud2",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_code",
											"type": "String"
										},
										"sink": {
											"name": "channel_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "channel_name",
											"type": "String"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "group_code",
											"type": "String"
										},
										"sink": {
											"name": "group_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_code",
											"type": "String"
										},
										"sink": {
											"name": "sbf_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sbf_name",
											"type": "String"
										},
										"sink": {
											"name": "sbf_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "moq",
											"type": "String"
										},
										"sink": {
											"name": "moq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_from",
											"type": "String"
										},
										"sink": {
											"name": "effective_from",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "effective_to",
											"type": "String"
										},
										"sink": {
											"name": "effective_to",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_base",
											"type": "String"
										},
										"sink": {
											"name": "is_base",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMTR_Cloud2",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMPG_Cloud1",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMPG_cloud01_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMPG_cloud01_2024Mar31.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawLEAPTAS_SBDMPG_Cloud1",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_code",
											"type": "String"
										},
										"sink": {
											"name": "distributor_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMPG_Cloud1",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SBDMTR_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SBDMTR_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SBDMTR_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SBDMPG_Cloud2",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMPG_cloud02_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMPG_cloud02_2024Mar31.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawLEAPTAS_SBDMPG_Cloud2",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_code",
											"type": "String"
										},
										"sink": {
											"name": "distributor_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMPG_Cloud2",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBDMPG_Cloud3",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "SBDMPG_cloud03_2023Sep01.csv",
											"type": "Expression"
										}
									},
									{
										"name": "LastModifiedDatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									},
									{
										"name": "FileSetID",
										"value": "0"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "SBDMPG_cloud03_2024Mar31.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawLEAPTAS_SBDMPG_Cloud3",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sbd_name",
											"type": "String"
										},
										"sink": {
											"name": "sbd_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "distributor_code",
											"type": "String"
										},
										"sink": {
											"name": "distributor_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "branch_code",
											"type": "String"
										},
										"sink": {
											"name": "branch_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileSetID",
											"type": "String"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LeapCSV_Temp_V2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Destination_table",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "tmpRawLEAPTAS_SBDMPG_Cloud3",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUBD-To-DB_Temp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SubdFolderpath",
								"type": "DatasetReference",
								"parameters": {
									"Folder": "SBD",
									"Container": "smartbasketcontainer"
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(item().name),'MST')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy SubD MPG Data",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "SBD Name",
																	"type": "String"
																},
																"sink": {
																	"name": "sbd_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Distributor Code",
																	"type": "String"
																},
																"sink": {
																	"name": "distributor_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Branch Code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "DS_SubD_Excel",
														"type": "DatasetReference",
														"parameters": {
															"Filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SubD_ttmpRawLEAPTAS_SBDMPG_HistoryData_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy SubD MST Data",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "SBD Name",
																	"type": "String"
																},
																"sink": {
																	"name": "sbd_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Channel Code",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Channel Name",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Group Code",
																	"type": "String"
																},
																"sink": {
																	"name": "group_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "SBF Code",
																	"type": "String"
																},
																"sink": {
																	"name": "sbf_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "SBF Name",
																	"type": "String"
																},
																"sink": {
																	"name": "sbf_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "MOQ",
																	"type": "String"
																},
																"sink": {
																	"name": "moq",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Effective From",
																	"type": "String"
																},
																"sink": {
																	"name": "effective_from",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Effective To",
																	"type": "String"
																},
																"sink": {
																	"name": "effective_to",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Is Base",
																	"type": "String"
																},
																"sink": {
																	"name": "is_base",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "DS_SubD_Excel",
														"type": "DatasetReference",
														"parameters": {
															"Filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SubD_tmpRawLEAPTAS_SBDMTR_HistoryData_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-01-04T16:41:12Z"
			},
			"dependsOn": []
		}
	]
}