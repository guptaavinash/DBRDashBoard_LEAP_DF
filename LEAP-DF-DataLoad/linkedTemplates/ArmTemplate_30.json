{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_NC_Sales_SUBD_Temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Swingdbconnection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUBD_NCS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SUBDCODE",
						"type": "varchar"
					},
					{
						"name": "DSECODE",
						"type": "varchar"
					},
					{
						"name": "CUSTCODE",
						"type": "varchar"
					},
					{
						"name": "INVNO",
						"type": "varchar"
					},
					{
						"name": "INVDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SKUCCODE",
						"type": "varchar"
					},
					{
						"name": "SKUDCODE",
						"type": "varchar"
					},
					{
						"name": "SKUEANCODE",
						"type": "varchar"
					},
					{
						"name": "BATCHCODE",
						"type": "varchar"
					},
					{
						"name": "QTY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GROSSAMOUNT",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TAXAMOUNT",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "INITDISC",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LINEDISC",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "NETAMOUNT",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "INVREF",
						"type": "varchar"
					},
					{
						"name": "SELECTEDDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UPC",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RETAILING",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tmpSubDSalesForDA"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CubeProcessLog')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CubeProcessLog",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T14:11:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DAProcessLogClear')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DAProcessLog",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-11-23T06:50:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DW_Scale_100')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DW_Scale_100",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-12-13T17:57:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyRefreshSchemeJob')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DailyRefeshSchemePipeline_V2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-11T10:53:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								20
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hawkeye_ScaleDB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Scale_HawkeyeDB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T18:09:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								14
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hawkeye_ScaleDown')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ScaleDown_HawkeyeDB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T18:11:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								20
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hawkeye_ScaleUp')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ScaleUp_HawkeyeDB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T18:10:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								10
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScaleDBAt5_30')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Scaledb",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-06-17T18:03:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TAS_DB_Scale')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TAS_DB_Scale",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-07-06T07:07:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TAS_DB_Scale_100DTU')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TAS_DB_Scale_100DTU",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-09-10T15:57:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TAS_DB_Scale_200DTU')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TAS_DB_Scale_200DTU",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-07-07T08:48:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								35
							],
							"hours": [
								18
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TAS_Scale_10DTU')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TAS_DB_Scale_10 DTU",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-08-26T05:18:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_DW_Resume_Scale')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DW_Resume_Scale",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-07T04:30:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIDataProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API All Extract Data Populate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateAPIAllExtract]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API All Extract Data Populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIDeleteOLDFilesinFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataDatetime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DeleteDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TimeToday",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcnow(),'UTC','India Standard Time'),1,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataDeleteDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertTimeZone(utcnow(),'UTC','India Standard Time'),8,'Day'),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteAllFilesinFolder",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DataDatetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DeleteAllFilesinFolder",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Containername": {
									"value": "apidatacontainer",
									"type": "Expression"
								},
								"Foldername": {
									"value": "@{concat(formatDateTime(variables('DataDeleteDate'), 'yyyy'), '/', formatDateTime(variables('DataDeleteDate'), 'MM'), '/', formatDateTime(variables('DataDeleteDate'), 'dd'))}",
									"type": "Expression"
								},
								"DataDeleteDate": {
									"value": "@variables('DataDeleteDate')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TimeToday": {
						"type": "String"
					},
					"DataDeleteDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIExtractPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PurdDataFileGeneration_Temp",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PurdDataFileGeneration_Temp",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Purchase History Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PurdDataFileGeneration_Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "trivedi.dt.1@pg.com,maiti.am@pg.com",
								"Subject": "Purchase History File generation notification",
								"ErrorMessage": "Daily Purchase history file is generated."
							}
						}
					},
					{
						"name": "spAPI_PopulateExtractIDCMP-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spUpdateAPIDataStatus-Step1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAPI_PopulateExtractIDCMP_Step2]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spAPI_PopulateExtractIDCMP-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "APIDataFileGeneration_Step2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification-Step2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spUpdateAPIDataStatus_Step2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,varun@astix.in,helpdesk@astix.in,trivedi.dt.1@pg.com,maiti.am@pg.com,Shivansh.Saraswat@in.ey.com,bhavana.sribhashyam@in.ey.com,hari.k.chinthala@in.ey.com,yaswanth.nallamothu@in.ey.com,spandan.dutta@in.ey.com,sachan.s.6@pg.com,arundhati.mukherjee@parthenon.ey.com",
								"Subject": "IDCMP Process Status Step2",
								"ErrorMessage": "IDCMP Step 2 Processed and files generated successful"
							}
						}
					},
					{
						"name": "spAPI_PopulateExtractIDCMP-DF_Step1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Purchase History Send Notification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAPI_PopulateExtractIDCMP_Step1]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration_Step1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spAPI_PopulateExtractIDCMP-DF_Step1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration_Step1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spUpdateAPIDataStatus-Step1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration_Step1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateAPIDataStatus]",
							"storedProcedureParameters": {
								"flgSET": {
									"value": "1",
									"type": "Int16"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "APIDB_LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spUpdateAPIDataStatus_Step2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration_Step2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateAPIDataStatus]",
							"storedProcedureParameters": {
								"flgSET": {
									"value": "2",
									"type": "Int16"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "APIDB_LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Send Success Notification-Step2_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spUpdateAPIDataStatus-Step1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,varun@astix.in,helpdesk@astix.in,trivedi.dt.1@pg.com,maiti.am@pg.com,Shivansh.Saraswat@in.ey.com,bhavana.sribhashyam@in.ey.com,hari.k.chinthala@in.ey.com,yaswanth.nallamothu@in.ey.com,spandan.dutta@in.ey.com,sachan.s.6@pg.com,arundhati.mukherjee@parthenon.ey.com",
								"Subject": "IDCMP Process Status Step1",
								"ErrorMessage": "IDCMP Step 1 Processed and files generated successful"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIExtractPipeline_DayPSR_OLd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAPIExtarctDates",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetAPIExtarctDates]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetAPIExtarctDates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetAPIExtarctDates').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "spPopulateAPIExtractDayPSRRawBranch_DelIfSeen",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spPopulateAPIExtractDayPSRRawBranch_DelIfSeen]",
										"storedProcedureParameters": {
											"Date": {
												"value": {
													"value": "@item().ProcessDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "APIDataFileGeneration_Step2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "spPopulateAPIExtractDayPSRRawBranch_DelIfSeen",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "APIDataFileGeneration_OnlyDayPSR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"processdate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATTNDataMovement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpTruncateATTNData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "SpTruncateATTNData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpTruncateAATNData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-07-02T07:41:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AstixLeapCubeProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpGetCubeProcessStatus",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCubeProcessStatus]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpGetCubeProcessStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('SpGetCubeProcessStatus').output.firstRow.cubereadytoprocess),1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "AS_CubeProcess_PCode_Sync_Fact",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "AS_ResumeandScale_S8",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "AS_CubeProcess_Pcode_Sync_Fact_V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"flgcalled": 1,
											"TypeID": 1,
											"processdate": {
												"value": "@utcnow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpGetCubeProcessStatusUpd_End",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "AS_ResumeandScale_S4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpGetCubeProcessStatusUpd]",
										"storedProcedureParameters": {
											"flgEnd": {
												"value": "1",
												"type": "Byte"
											},
											"flgStart": {
												"value": "1",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpGetCubeProcessStatusUpd_Start",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpGetCubeProcessStatusUpd]",
										"storedProcedureParameters": {
											"flgEnd": {
												"value": "0",
												"type": "Byte"
											},
											"flgStart": {
												"value": "1",
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Dev_DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "AS_ResumeandScale_S8",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpGetCubeProcessStatusUpd_Start",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "AS_ResumeandScale_S8",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "AS_ResumeandScale_S4",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "AS_CubeProcess_PCode_Sync_Fact",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "AS_ResumeandScale_S4",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Send Notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpGetCubeProcessStatusUpd_End",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "Avinash@Astix.in,Alok@astix.in,Gaurav@astix.in,Varun@astix.in,Anuj@astix.in,rtdxhelpdesk@Astix.in",
											"Subject": "Astix Cube Process Successfully",
											"ErrorMessage": "Astix Cube Process Successfully"
										}
									}
								},
								{
									"name": "DW_Resume_Scale_V2",
									"type": "ExecutePipeline",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Send Notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DW_Resume_Scale_V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ScaleVal": "DW200c",
											"flgcalled": 1
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}